{"version":3,"sources":["webpack:///./source/src/app/components/Shared/ScopeValidation.jsx","webpack:///./source/src/app/components/Applications/Listing/DeleteConfirmation.jsx","webpack:///./node_modules/@material-ui/icons/HighlightOffRounded.js","webpack:///./source/src/app/components/Applications/Listing/AppsTableContent.jsx","webpack:///./source/src/app/components/Applications/Listing/ApplicationTableHead.jsx","webpack:///./source/src/app/components/Applications/Listing/Listing.jsx"],"names":["resourcePaths","APIS","SINGLE_API","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","APPLICATIONS","SINGLE_APPLICATION","APPLICATION_GENERATE_KEYS","APPLICATION_GENERATE_KEY_TYPE","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","SINGLE_SUBSCRIPTION","SUBSCRIPTIONS","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","resourceMethods","POST","PUT","GET","DELETE","ScopeValidation","React","Component","constructor","props","super","this","state","componentDidMount","resourcePath","resourceMethod","hasScope","AuthManager","hasScopes","then","haveScope","setState","render","children","propTypes","PropTypes","node","isRequired","string","DeleteConfirmation","handleAppDelete","isDeleteOpen","toggleDeleteConfirmation","open","transition","Slide","role","id","defaultMessage","dense","onClick","size","variant","color","func","bool","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","root","padding","spacing","TableCell","StyledTableRow","background","TableRow","AppsTableContent","notFound","APPLICATION_STATES","CREATED","APPROVED","REJECTED","apps","classes","appsTableData","values","map","app","appInner","deleting","ResourceNotFound","TableBody","className","fullHeight","isAppOwner","owner","getUser","name","tableRow","key","applicationId","data-testid","align","appName","status","to","throttlingPolicy","Typography","component","gutterBottom","subscriptionCount","Tooltip","title","appOwner","IconButton","disabled","aria-label","Icon","data-appid","CircularProgress","instanceOf","Map","height","pointerEvents","applicationTableHead","columnData","numeric","disablePadding","label","sorting","order","orderBy","TableHead","column","sortDirection","TableSortLabel","active","direction","property","event","onRequestSort","Listing","page","updateApps","undefined","isApplicationGroupSharingEnabled","query","data","enabled","context","settings","applicationSharingEnabled","isApplicationSharingEnabled","newQuery","target","clearSearch","newPage","rowsPerPage","queryToSearch","pageToSearch","Application","all","applications","pagination","total","list","set","totalApps","catch","error","console","log","window","location","appSettings","currentOrder","nextRowsPerPage","rowsPerPageRatio","nextPage","Math","floor","history","push","currentTarget","getAttribute","deletingId","bind","setQuery","handleSearchKeyPress","filterApps","intl","newData","get","message","formatMessage","deleteApp","ok","delete","Alert","info","strokeColorMain","getContrastText","custom","infoBar","paginationEnabled","content","Box","display","flexDirection","justifyContent","alignItems","classNames","mainIconWrapper","CustomIcon","strokeColor","width","icon","mainTitleWrapper","mainTitle","createLinkWrapper","Button","pl","Paper","paper","AppBar","searchBar","position","elevation","Toolbar","Grid","container","item","block","xs","TextField","fullWidth","placeholder","InputProps","disableUnderline","searchInput","onChange","onKeyPress","length","addUser","contentWrapper","Loading","appContent","appTablePaper","Table","ApplicationTableHead","handleRequestSort","TableFooter","TablePagination","count","rowsPerPageOptions","labelRowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","handleChangePage","onChangeRowsPerPage","handleChangeRowsPerPage","noDataMessage","handleClickOpen","onKeyDown","clearSearchLink","contextType","Settings","shape","flex","injectIntl","right","top","margin","borderBottom","typography","marginRight","card","minWidth","paddingBottom","bullet","transform","pos","marginBottom","text","secondary","createAppWrapper","textDecoration","divider","createButton","marginLeft","alignSelf","titleWrapper","flexGrow","minHeight","grey","A200","paddingTop","paddingLeft","paddingRight","marginTop","maxHeight","overflow","dialogContainer","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","action","primary","light","cursor","withTheme"],"mappings":"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","file":"ApiListing.17e2b05bd0d11219f90a.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AuthManager from '../../data/AuthManager';\n\nconst resourcePaths = {\n    APIS: '/apis',\n    SINGLE_API: '/apis/{apiId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    APPLICATIONS: '/applications',\n    SINGLE_APPLICATION: '/applications/{applicationId}',\n    APPLICATION_GENERATE_KEYS: '/applications/{applicationId}/generate-keys',\n    APPLICATION_GENERATE_KEY_TYPE: '/applications/{applicationId}/keys/{keyType}',\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SINGLE_SUBSCRIPTION: '/subscriptions/{subscriptionId}',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription:',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n};\n\nconst resourceMethods = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nclass ScopeValidation extends React.Component {\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const { resourcePath, resourceMethod } = this.props;\n        const hasScope = AuthManager.hasScopes(resourcePath, resourceMethod);\n        if (hasScope) {\n            hasScope.then((haveScope) => {\n                this.setState({ haveScope });\n            });\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        if (this.state.haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport {\n    ScopeValidation,\n    resourceMethods,\n    resourcePaths,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core/';\nimport Slide from '@material-ui/core/Slide';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst DeleteConfirmation = (props) => {\n    const { handleAppDelete, isDeleteOpen, toggleDeleteConfirmation } = props;\n    return (\n        <Dialog open={isDeleteOpen} transition={Slide} role='alertdialog'>\n            <DialogTitle>\n                <FormattedMessage\n                    id='Applications.Listing.DeleteConfirmation.dialog.title'\n                    defaultMessage='Delete Application'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.text.description'\n                        defaultMessage='The application will be removed'\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button dense onClick={toggleDeleteConfirmation}>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button\n                    id='itest-confirm-application-delete'\n                    size='small'\n                    variant='outlined'\n                    color='primary'\n                    onClick={handleAppDelete}\n                >\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog,delete'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\nDeleteConfirmation.propTypes = {\n    handleAppDelete: PropTypes.func.isRequired,\n    isDeleteOpen: PropTypes.bool.isRequired,\n    toggleDeleteConfirmation: PropTypes.func.isRequired,\n};\nexport default DeleteConfirmation;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13.89 8.7L12 10.59 10.11 8.7a.9959.9959 0 00-1.41 0c-.39.39-.39 1.02 0 1.41L10.59 12 8.7 13.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l1.89 1.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l1.89-1.89c.39-.39.39-1.02 0-1.41-.39-.38-1.03-.38-1.41 0zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOffRounded');\n\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthManager from 'AppData/AuthManager';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = (theme) => ({\n    fullHeight: {\n        height: '100%',\n    },\n    tableRow: {\n        height: theme.spacing(5),\n        '& td': {\n            padding: theme.spacing(0.5),\n        },\n    },\n    appOwner: {\n        pointerEvents: 'none',\n    },\n    appName: {\n        '& a': {\n            color: '#1b9ec7 !important',\n        },\n    },\n});\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n    root: {\n        padding: `0 0 0  ${theme.spacing(2)}px`,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n/**\n *\n *\n * @class AppsTableContent\n * @extends {Component}\n */\nclass AppsTableContent extends Component {\n    /**\n     * @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            notFound: false,\n        };\n        this.APPLICATION_STATES = {\n            CREATED: 'CREATED',\n            APPROVED: 'APPROVED',\n            REJECTED: 'REJECTED',\n        };\n    }\n\n    /**\n     * @inheritdoc\n     * @memberof AppsTableContent\n     */\n    render() {\n        const {\n            apps, toggleDeleteConfirmation, classes,\n        } = this.props;\n        const { notFound } = this.state;\n        let appsTableData = [];\n\n        if (apps) {\n            appsTableData = [...apps.values()].map((app) => {\n                const appInner = app;\n                appInner.deleting = false;\n                return appInner;\n            });\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        return (\n            <TableBody className={classes.fullHeight}>\n                {appsTableData\n                    .map((app) => {\n                        const isAppOwner = app.owner === AuthManager.getUser().name;\n                        return (\n                            <StyledTableRow className={classes.tableRow} key={app.applicationId} data-testid={'row-' + app.name}>\n                                <StyledTableCell align='left' className={classes.appName}>\n                                    {app.status === this.APPLICATION_STATES.APPROVED ? (\n                                        <Link to={'/applications/' + app.applicationId} className='app-listing-name-link'>{app.name}</Link>\n                                    ) : (\n                                        app.name\n                                    )}\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>{app.owner}</StyledTableCell>\n                                <StyledTableCell align='left'>{app.throttlingPolicy}</StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    {app.status === this.APPLICATION_STATES.APPROVED && (\n                                        <Typography variant='subtitle1' component='label' gutterBottom>\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.active'\n                                                defaultMessage='ACTIVE'\n                                            />\n                                        </Typography>\n                                    )}\n                                    {app.status === this.APPLICATION_STATES.CREATED && (\n                                        <>\n                                            <Typography variant='subtitle1' component='label' gutterBottom>\n                                                <FormattedMessage\n                                                    id='Applications.Listing.AppsTableContent.inactive'\n                                                    defaultMessage='INACTIVE'\n                                                />\n\n                                            </Typography>\n                                            <Typography variant='caption'>\n                                                <FormattedMessage\n                                                    id='Applications.Listing.AppsTableContent.wait.approval'\n                                                    defaultMessage='waiting for approval'\n                                                />\n                                            </Typography>\n                                        </>\n                                    )}\n                                    {app.status === this.APPLICATION_STATES.REJECTED && (\n                                        <Typography variant='subtitle1' component='label' gutterBottom>\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.rejected'\n                                                defaultMessage='REJECTED'\n                                            />\n                                        </Typography>\n                                    )}\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>{app.subscriptionCount}</StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    <ScopeValidation\n                                        resourcePath={resourcePaths.SINGLE_APPLICATION}\n                                        resourceMethod={resourceMethods.PUT}\n                                    >\n                                        {app.status === this.APPLICATION_STATES.APPROVED && (\n                                            <Tooltip title={isAppOwner\n                                                ? (\n                                                    <FormattedMessage\n                                                        id='Applications.Listing.AppsTableContent.edit.tooltip'\n                                                        defaultMessage='Edit'\n                                                    />\n                                                ) : (\n                                                    <FormattedMessage\n                                                        id='Applications.Listing.AppsTableContent.edit.tooltip.disabled.button'\n                                                        defaultMessage='Not allowed to modify shared applications'\n                                                    />\n                                                )}\n                                            >\n                                                <span className='app-edit-button-wrapper'>\n                                                    <Link\n                                                        to={`/applications/${app.applicationId}/edit/`}\n                                                        className={!isAppOwner && classes.appOwner}\n                                                    >\n                                                        <IconButton disabled={!isAppOwner} aria-label={'Edit' + app.name}>\n                                                            <Icon>\n                                                                edit\n                                                            </Icon>\n                                                        </IconButton>\n                                                    </Link>\n                                                </span>\n                                            </Tooltip>\n                                        )}\n                                    </ScopeValidation>\n                                    <ScopeValidation\n                                        resourcePath={resourcePaths.SINGLE_APPLICATION}\n                                        resourceMethod={resourceMethods.DELETE}\n                                    >\n                                        <Tooltip title={isAppOwner ? (\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.delete.tooltip'\n                                                defaultMessage='Delete'\n                                            />\n                                        ) : (\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.delete.tooltip.disabled.button'\n                                                defaultMessage='Not allowed to delete shared applications'\n                                            />\n                                        )}\n                                        >\n                                            <span className='app-delete-button-wrapper'>\n                                                <IconButton\n                                                    className='itest-application-delete-button'\n                                                    disabled={app.deleting || !isAppOwner}\n                                                    data-appid={app.applicationId}\n                                                    onClick={toggleDeleteConfirmation}\n                                                    color='default'\n                                                    aria-label={'Delete' + app.name}\n                                                    id={'delete-' + app.name + '-btn'}\n                                                >\n                                                    <Icon>delete</Icon>\n                                                </IconButton>\n                                            </span>\n                                        </Tooltip>\n                                    </ScopeValidation>\n                                    {app.deleting && <CircularProgress size={24} />}\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        );\n                    })}\n            </TableBody>\n        );\n    }\n}\nAppsTableContent.propTypes = {\n    toggleDeleteConfirmation: PropTypes.func.isRequired,\n    apps: PropTypes.instanceOf(Map).isRequired,\n};\nexport default withStyles(styles)(AppsTableContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * @inheritdoc\n * @class ApplicationTableHead\n * @extends {Component}\n */\nconst applicationTableHead = (props) => {\n    const createSortHandler = (property) => (event) => {\n        props.onRequestSort(event, property);\n    };\n    const columnData = [\n        {\n            id: 'name',\n            numeric: false,\n            disablePadding: true,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.name'\n                defaultMessage='Name'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'owner',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.owner'\n                defaultMessage='Owner'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'throttlingTier',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.policy'\n                defaultMessage='Policy'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'workflowStatus',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.workflow.status'\n                defaultMessage='Workflow Status'\n            />),\n            sorting: false,\n        },\n        {\n            id: 'subscriptions',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.subscriptions'\n                defaultMessage='Subscriptions'\n            />),\n            sorting: false,\n        },\n        {\n            id: 'actions',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.actions'\n                defaultMessage='Actions'\n            />),\n            sorting: false,\n        },\n    ];\n    const { order, orderBy } = props;\n    return (\n        <TableHead>\n            <TableRow>\n                {columnData.map((column) => {\n                    return (\n                        <TableCell\n                            key={column.id}\n                            align='left'\n                            sortDirection={orderBy === column.id ? order : false}\n                        >\n                            {column.sorting ? (\n                                <TableSortLabel\n                                    active={orderBy === column.id}\n                                    direction={order}\n                                    onClick={createSortHandler(column.id)}\n                                >\n                                    {column.label}\n                                </TableSortLabel>\n                            ) : (\n                                column.label\n                            )}\n                        </TableCell>\n                    );\n                })}\n            </TableRow>\n        </TableHead>\n    );\n};\napplicationTableHead.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.string.isRequired,\n    orderBy: PropTypes.string.isRequired,\n};\nexport default applicationTableHead;\n","/* eslint-disable no-nested-ternary */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Application from 'AppData/Application';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport { appSettings } from 'Settings';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HighlightOffRoundedIcon from '@material-ui/icons/HighlightOffRounded';\nimport AppsTableContent from './AppsTableContent';\nimport ApplicationTableHead from './ApplicationTableHead';\nimport DeleteConfirmation from './DeleteConfirmation';\n\n/**\n *\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = (theme) => ({\n    noDataMessage: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        padding: 40,\n    },\n    clearSearch: {\n        position: 'absolute',\n        right: 111,\n        top: 13,\n    },\n    paper: {\n        margin: 30,\n    },\n    searchBar: {\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    },\n    searchInput: {\n        fontSize: theme.typography.fontSize,\n        height: 50,\n    },\n    block: {\n        display: 'block',\n    },\n    addUser: {\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        margin: 0,\n    },\n    card: {\n        minWidth: 275,\n        paddingBottom: 20,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    pos: {\n        marginBottom: 12,\n        color: theme.palette.text.secondary,\n    },\n    createAppWrapper: {\n        textDecoration: 'none',\n    },\n    divider: {\n        marginBottom: 20,\n    },\n    createButton: {\n        textDecoration: 'none',\n        display: 'inline-block',\n        marginLeft: 20,\n        alignSelf: 'flex-start',\n    },\n    titleWrapper: {\n        display: 'flex',\n    },\n    // New styles\n    // //////////////////////\n    content: {\n        flexGrow: 1,\n    },\n    root: {\n        minHeight: 80,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: `solid 1px ${theme.palette.grey.A200}`,\n        display: 'block',\n    },\n    mainIconWrapper: {\n        paddingTop: theme.spacing(1.5),\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(2.5),\n    },\n    mainTitleWrapper: {\n        display: 'flex',\n    },\n    createLinkWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    appContent: {\n        marginTop: 0,\n        margin: 'auto',\n        maxHeight: theme.spacing(90),\n        height: theme.spacing(90),\n        overflow: 'scroll',\n    },\n    dialogContainer: {\n        width: 1000,\n        padding: theme.spacing(2),\n    },\n    container: {\n        height: '100%',\n    },\n    appTablePaper: {\n        '& table tr td': {\n            paddingLeft: theme.spacing(1),\n        },\n        '& table tr td:first-child, & table tr th:first-child': {\n            paddingLeft: theme.spacing(2),\n        },\n        '& table tr:nth-child(even)': {\n            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n            '& td, & a, & .material-icons': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n            },\n        },\n        '& table tr:nth-child(odd)': {\n            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n            '& td, & a, & .material-icons': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n            },\n        },\n        '& table th': {\n            backgroundColor: theme.custom.listView.tableHeadBackground,\n            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n            paddingLeft: theme.spacing(1),\n        },\n        '& table tr td button.Mui-disabled span.material-icons': {\n            color: theme.palette.action.disabled,\n        },\n    },\n    clearSearchLink: {\n        color: theme.palette.primary.light,\n        cursor: 'pointer',\n    },\n});\n\n/**\n * @inheritdoc\n * @class Listing\n * @extends {Component}\n */\nclass Listing extends Component {\n    /**\n     *\n     * @param {any} props properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            order: 'asc',\n            orderBy: 'name',\n            data: null,\n            page: 0,\n            rowsPerPage: Listing.rowsPerPage,\n            isApplicationSharingEnabled: true,\n            isDeleteOpen: false,\n            totalApps: 0,\n            query: '',\n        };\n        this.handleAppDelete = this.handleAppDelete.bind(this);\n        this.setQuery = this.setQuery.bind(this);\n        this.handleSearchKeyPress = this.handleSearchKeyPress.bind(this);\n        this.filterApps = this.filterApps.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n    }\n\n    /**\n     * @memberof Listing\n     */\n    componentDidMount() {\n        this.updateApps();\n        this.isApplicationGroupSharingEnabled();\n    }\n\n    /**\n     * @memberof Listing\n     */\n     constfilterApps = () => {\n         this.setState({ page: 0 });\n         this.updateApps(undefined, 0);\n         this.isApplicationGroupSharingEnabled();\n     }\n\n    clearSearch = () => {\n        this.setState({ query: '', data: null, page: 0 });\n        this.updateApps('', 0);\n        this.isApplicationGroupSharingEnabled();\n    }\n\n    /**\n     * retrieve Settings from the context and check the application sharing enabled\n     * @param {*} settingsData required data\n     */\n    isApplicationGroupSharingEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.applicationSharingEnabled;\n        this.setState({ isApplicationSharingEnabled: enabled });\n    }\n\n    /**\n     * @memberof Listing\n     */\n    setQuery = (event) => {\n        const newQuery = event.target.value;\n        if (newQuery === '') {\n            this.clearSearch();\n        } else {\n            this.setState({ query: newQuery });\n        }\n    };\n\n    /**\n     * @memberof Listing\n     */\n    updateApps = (newQuery, newPage) => {\n        const {\n            page, rowsPerPage, order, orderBy, query,\n        } = this.state;\n        const queryToSearch = newQuery !== undefined ? newQuery : query;\n        const pageToSearch = newPage !== undefined ? newPage : page;\n        const promisedApplications = Application.all(rowsPerPage, pageToSearch * rowsPerPage, order, orderBy, queryToSearch);\n        promisedApplications\n            .then((applications) => {\n                const { pagination: { total } } = applications;\n                // Applications list put into map, to make it efficient when deleting apps (referring back to an App)\n                const apps = new Map();\n                applications.list.map((app) => apps.set(app.applicationId, app)); // Store application against its UUID\n                this.setState({ data: apps, totalApps: total });\n            })\n            .catch((error) => {\n                console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    // eslint-disable-next-line react/no-unused-state\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    window.location = appSettings.context + '/services/configs';\n                }\n            });\n    }\n\n    /**\n     * @param{*} event event\n     * @param{*} property sorting method\n     */\n    handleRequestSort = (event, property) => {\n        const { orderBy, order } = this.state;\n        let currentOrder = 'desc';\n        if (orderBy === property) {\n            currentOrder = order === 'desc' ? 'asc' : 'desc';\n            this.setState({ order: currentOrder }, this.updateApps);\n        } else {\n            this.setState({ order: currentOrder, orderBy: property }, this.updateApps);\n        }\n    };\n\n    /**\n     *\n     * @param {*} event event\n     * @param {*} page page\n     * @memberof Listing\n     */\n    handleChangePage = (event, page) => {\n        this.setState({ page }, this.updateApps);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof Listing\n     */\n    handleChangeRowsPerPage = (event) => {\n        const nextRowsPerPage = event.target.value;\n        const { rowsPerPage, page } = this.state;\n        const rowsPerPageRatio = rowsPerPage / nextRowsPerPage;\n        const nextPage = Math.floor(page * rowsPerPageRatio);\n        this.setState({ rowsPerPage: nextRowsPerPage, page: nextPage }, this.updateApps);\n    };\n\n    /**\n     * @memberof Listing\n     */\n    handleClickOpen = () => {\n        const { history } = this.props;\n        history.push('/applications/create');\n    };\n\n    /**\n     * @memberof Listing\n     */\n     filterApps = () => {\n         this.setState({ page: 0 });\n         this.updateApps(undefined, 0);\n         this.isApplicationGroupSharingEnabled();\n     }\n\n    toggleDeleteConfirmation = (event) => {\n        let id = '';\n        if (event) {\n            id = event.currentTarget.getAttribute('data-appid');\n        }\n        this.setState(({ isDeleteOpen }) => ({ isDeleteOpen: !isDeleteOpen, deletingId: id }));\n    }\n\n    /**\n     * @memberof Listing\n     * @param {Event} event click event\n     */\n    handleSearchKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.setState({ page: 0 });\n            this.updateApps(undefined, 0);\n            this.isApplicationGroupSharingEnabled();\n        }\n    }\n\n    /**\n     * @param {*} event event\n     * @memberof Listing\n     */\n    handleAppDelete() {\n        const { data, deletingId, page } = this.state;\n        const { intl } = this.props;\n        const newData = new Map([...data]);\n        const app = newData.get(deletingId);\n        app.deleting = true;\n\n        let message = intl.formatMessage({\n            defaultMessage: 'Application {name} deleted successfully!',\n            id: 'Applications.Listing.Listing.application.deleted.successfully',\n        }, { name: app.name });\n        const promisedDelete = Application.deleteApp(deletingId);\n        promisedDelete.then((ok) => {\n            if (ok) {\n                newData.delete(deletingId);\n                Alert.info(message);\n                this.toggleDeleteConfirmation();\n                // Page is reduced by 1, when there is only one application in a\n                // particular page and it is deleted (except when in first page)\n                if (newData.size === 0 && page !== 0) {\n                    this.setState((state) => ({ page: state.page - 1 }));\n                }\n                this.updateApps();\n            }\n        }).catch((error) => {\n            console.log(error);\n            message = intl.formatMessage({\n                defaultMessage: 'Error while deleting application {name}',\n                id: 'Applications.Listing.Listing.application.deleting.error',\n            }, { name: app.name });\n            Alert.error(message);\n        });\n    }\n\n    static rowsPerPage = 10;\n\n    /**\n    * @inheritdoc\n    */\n    render() {\n        const {\n            data, order, orderBy, rowsPerPage, page, isApplicationSharingEnabled,\n            isDeleteOpen, totalApps, query,\n        } = this.state;\n        const { classes, theme, intl } = this.props;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const paginationEnabled = totalApps > Listing.rowsPerPage;\n        return (\n            <div className={classes.content}>\n                <div className={classes.root}>\n                    <Box display='flex' flexDirection='row' justifyContent='flex-start' alignItems='center'>\n                        <div className={classNames(classes.mainIconWrapper, 'application-listing-icon-wrapper')}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='applications' />\n                        </div>\n                        <div className={classes.mainTitleWrapper}>\n                            <Typography variant='h4' component='h1' className={classes.mainTitle}>\n                                <FormattedMessage\n                                    id='Applications.Listing.Listing.applications'\n                                    defaultMessage='Applications'\n                                />\n                            </Typography>\n                            <div className={classes.createLinkWrapper}>\n                                <ScopeValidation\n                                    resourcePath={resourcePaths.APPLICATIONS}\n                                    resourceMethod={resourceMethods.POST}\n                                >\n                                    <Link id='itest-application-create-link' to='/applications/create'>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                        >\n                                            <FormattedMessage\n                                                id='Applications.Create.Listing.add.new.application'\n                                                defaultMessage='Add New Application'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </ScopeValidation>\n                            </div>\n                        </div>\n                    </Box>\n                    <Box display='flex' pl={4}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage\n                                id='Applications.Listing.Listing.logical.description'\n                                defaultMessage={`An application is a logical collection of APIs. \n                                        Applications allow you to use a single access token to invoke a\n                                         collection of APIs and to subscribe to one API multiple times\n                                          and allows unlimited access by default.`}\n                            />\n                        </Typography>\n                    </Box>\n                </div>\n                <Paper className={classes.paper}>\n                    <AppBar className={classes.searchBar} position='static' color='default' elevation={0}>\n                        <Toolbar>\n                            <Grid container spacing={2} alignItems='center'>\n                                <Grid item>\n                                    <SearchIcon className={classes.block} color='inherit' />\n                                </Grid>\n                                <Grid item xs>\n                                    <TextField\n                                        fullWidth\n                                        id='search-label'\n                                        label={intl.formatMessage({\n                                            defaultMessage: 'Search',\n                                            id: 'Applications.Listing.Listing.applications.search.label',\n                                        })}\n                                        placeholder={intl.formatMessage({\n                                            defaultMessage: 'Search application by name',\n                                            id: 'Applications.Listing.Listing.applications.search.placeholder',\n                                        })}\n                                        InputProps={{\n                                            disableUnderline: true,\n                                            className: classes.searchInput,\n                                        }}\n                                        value={query}\n                                        onChange={this.setQuery}\n                                        onKeyPress={this.handleSearchKeyPress}\n                                    />\n                                    {query.length > 0 && (\n                                        <Tooltip title={intl.formatMessage({\n                                            defaultMessage: 'Clear Search',\n                                            id: 'Applications.Listing.Listing.clear.search',\n                                        })}\n                                        >\n                                            <IconButton aria-label='delete' className={classes.clearSearch} onClick={this.clearSearch}>\n                                                <HighlightOffRoundedIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                </Grid>\n                                <Grid item>\n                                    <Button variant='contained' className={classes.addUser} onClick={this.filterApps}>\n                                        <FormattedMessage\n                                            id='Applications.Listing.Listing.applications.search'\n                                            defaultMessage='Search'\n                                        />\n\n                                    </Button>\n\n                                </Grid>\n                            </Grid>\n                        </Toolbar>\n                    </AppBar>\n                    {!data && (\n                        <div className={classes.contentWrapper}>\n                            <Loading />\n                        </div>\n                    )}\n                    {data && (\n                        <div className={classes.contentWrapper}>\n                            {data.size > 0 ? (\n                                <div className={classes.appContent}>\n                                    <Paper className={classes.appTablePaper}>\n                                        <Table id='itest-application-list-table'>\n                                            <ApplicationTableHead\n                                                order={order}\n                                                orderBy={orderBy}\n                                                onRequestSort={this.handleRequestSort}\n                                            />\n                                            <AppsTableContent\n                                                handleAppDelete={this.handleAppDelete}\n                                                apps={data}\n                                                page={page}\n                                                rowsPerPage={rowsPerPage}\n                                                order={order}\n                                                orderBy={orderBy}\n                                                isApplicationSharingEnabled={isApplicationSharingEnabled}\n                                                toggleDeleteConfirmation={this.toggleDeleteConfirmation}\n                                            />\n                                            {paginationEnabled\n                                                && (\n                                                    <TableFooter>\n                                                        <TableRow>\n                                                            <TablePagination\n                                                                component='td'\n                                                                count={totalApps}\n                                                                rowsPerPage={rowsPerPage}\n                                                                rowsPerPageOptions={[5, 10, 15]}\n                                                                labelRowsPerPage='Show'\n                                                                page={page}\n                                                                backIconButtonProps={{\n                                                                    'aria-label': 'Previous Page',\n                                                                }}\n                                                                nextIconButtonProps={{\n                                                                    'aria-label': 'Next Page',\n                                                                }}\n                                                                onChangePage={this.handleChangePage}\n                                                                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                                                            />\n                                                        </TableRow>\n                                                    </TableFooter>\n                                                )}\n                                        </Table>\n                                    </Paper>\n                                </div>\n                            ) : (\n                                query === '' ? (\n                                    <div className={classes.noDataMessage}>\n                                        <Typography variant='h6' gutterBottom>\n                                            <FormattedMessage\n                                                id='Applications.Listing.Listing.noapps.display.title'\n                                                defaultMessage='No Applications Available'\n                                            />\n                                        </Typography>\n                                        <ScopeValidation\n                                            resourcePath={resourcePaths.APPLICATIONS}\n                                            resourceMethod={resourceMethods.POST}\n                                        >\n                                            <Typography variant='body2' gutterBottom>\n                                                <a\n                                                    onClick={this.handleClickOpen}\n                                                    onKeyDown={this.handleClickOpen}\n                                                    className={classes.clearSearchLink}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Applications.Listing.Listing.noapps.display.link.text'\n                                                        defaultMessage='Add New Application'\n                                                    />\n                                                </a>\n                                            </Typography>\n                                        </ScopeValidation>\n                                    </div>\n                                )\n                                    : (\n                                        <div className={classes.noDataMessage}>\n                                            <Typography variant='h6' gutterBottom>\n                                                <FormattedMessage\n                                                    id='Applications.Listing.Listing.applications.no.search.results.title'\n                                                    defaultMessage='No Matching Applications'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body2' gutterBottom>\n                                                <FormattedMessage\n                                                    id='Applications.Listing.Listing.applications.no.search.results.body.prefix'\n                                                    defaultMessage='Check the spelling or try to '\n                                                />\n                                                <a\n                                                    onClick={this.clearSearch}\n                                                    onKeyDown={this.clearSearch}\n                                                    className={classes.clearSearchLink}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Applications.Listing.Listing.applications.no.search.results.body.sufix'\n                                                        defaultMessage='clear the search'\n                                                    />\n                                                </a>\n                                            </Typography>\n                                        </div>\n                                    )\n                            )}\n                            <DeleteConfirmation\n                                handleAppDelete={this.handleAppDelete}\n                                isDeleteOpen={isDeleteOpen}\n                                toggleDeleteConfirmation={this.toggleDeleteConfirmation}\n                            />\n                        </div>\n                    )}\n\n                </Paper>\n            </div>\n        );\n    }\n}\nListing.contextType = Settings;\nListing.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.string,\n        flex: PropTypes.string,\n        content: PropTypes.string,\n        mainIconWrapper: PropTypes.string,\n        mainTitle: PropTypes.string,\n        mainTitleWrapper: PropTypes.string,\n        createLinkWrapper: PropTypes.string,\n        appContent: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Listing));\n"],"sourceRoot":""}