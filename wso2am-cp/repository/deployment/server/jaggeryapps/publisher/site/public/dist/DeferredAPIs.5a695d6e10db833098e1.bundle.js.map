{"version":3,"sources":["webpack:///./source/src/app/components/Shared/MuiAlert.jsx","webpack:///./source/src/app/components/Apis/Details/components/DeleteApiButton.jsx","webpack:///./node_modules/@material-ui/icons/Link.js","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/BaseThumbnail.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ImageGenerator.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/ImageUtils.js","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/RestAPIMenu.jsx","webpack:///./node_modules/@material-ui/icons/ReportProblemOutlined.js","webpack:///./node_modules/@material-ui/icons/ErrorOutlineOutlined.js","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/SoapAPIMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/GraphqlAPIMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/StreamingAPIMenu.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx","webpack:///./source/src/app/components/Apis/Listing/Listing.jsx","webpack:///./source/src/app/components/Apis/Listing/TableView/TableView.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/ApiThumbClassic.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/APIThumbPlain.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DocThumbClassic.jsx","webpack:///./node_modules/@material-ui/icons/TextFields.js","webpack:///./node_modules/@material-ui/icons/PictureAsPdf.js","webpack:///./node_modules/@material-ui/icons/DescriptionTwoTone.js","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DocThumbPlain.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/index.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPI.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/components/TaskState.jsx","webpack:///./node_modules/@material-ui/icons/CheckCircleOutlineOutlined.js","webpack:///./node_modules/@material-ui/icons/MoreHoriz.js","webpack:///./source/src/app/components/Apis/Listing/components/TopMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/components/APICreateMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/ServiceCatalogMenu.jsx","webpack:///./source/src/app/components/Shared/MenuButton.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPIProduct.jsx","webpack:///./source/src/app/data/APIProduct.js","webpack:///./node_modules/@material-ui/icons/Edit.js","webpack:///./source/src/app/components/Apis/Listing/Landing/components/LandingMenuItem.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/components/LandingMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/components/APICreateMenuSection.jsx"],"names":["styles","theme","getColor","palette","type","darken","lighten","getBackgroundColor","root","typography","body2","borderRadius","shape","backgroundColor","display","padding","standardSuccess","color","success","main","standardInfo","info","standardWarning","warning","standardError","error","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","icon","marginRight","fontSize","opacity","message","action","alignItems","marginLeft","paddingLeft","plainWaiting","text","secondary","plainSuccess","plainInfo","plainWarning","plainError","defaultIconMapping","waiting","Alert","React","props","ref","children","classes","className","closeText","iconMapping","onClose","role","severity","variant","other","square","elevation","clsx","capitalize","size","aria-label","title","onClick","withStyles","name","height","background","paper","borderBottom","grey","A200","backLink","textDecoration","backIcon","primary","cursor","backText","fontFamily","deleteWrapper","flex","justifyContent","paddingRight","spacing","delete","custom","apis","listing","deleteButtonColor","flexDirection","textAlign","linkText","inlineBlock","flexBox","DeleteApiButton","handleApiDelete","bind","handleRequestClose","handleRequestOpen","state","openMenu","this","setState","api","id","setLoading","updateData","isAPIProduct","history","API","deleteProduct","then","response","status","push","catch","body","description","apiType","CONSTS","APIProduct","version","deleteHandler","path","resourcePath","SINGLE_API","SINGLE_API_PRODUCT","resourceMethod","DELETE","classNames","onKeyDown","disabled","isRestricted","disableFocusRipple","disableRipple","defaultMessage","open","values","b","msg","dense","Component","defaultProps","propTypes","PropTypes","func","isRequired","bool","withRouter","withTheme","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","suppressLinkStyles","thumbButton","position","left","right","top","bottom","thumbBackdrop","common","black","thumb","zIndex","media","objectFit","windowURL","window","URL","webkitURL","BaseThumbnail","width","thumbnailPop","thumbnail","selectedIconProp","selectedIcon","colorProp","backgroundIndexProp","backgroundIndex","categoryProp","category","isEditable","imageUpdate","useState","iconJson","setIconJson","key","setThumbnail","imageLoaded","setImageLoaded","useTheme","thumbnailTemplates","useEffect","hasThumbnail","Api","getAPIProductThumbnail","getAPIThumbnail","data","headers","blob","Blob","url","createObjectURL","finally","overviewPath","apiUUID","view","artifact","fixedIcon","focusRipple","src","alt","component","to","number","iconWrapper","ImageGenerator","colorPair","str","colorPairs","backgrounds","iconElement","getIcon","document","length","charCodeAt","style","active","PureComponent","iconSettings","svgImage","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","thumbnailBoxChild","rects","i","j","sub","toString","fill","fillOpacity","x","y","primeColor","prime","RestAPIMenu","isCreateMenu","APICreateMenuSection","LandingMenu","alwaysShowDeploySampleButton","Configurations","showSampleDeploy","setShowSampleDeploy","composeQueryJSON","queryString","parse","limit","offset","search","resp","JSON","count","linkTo","helperText","light","SoapAPIMenu","openList","GraphqlAPIMenu","StreamingAPIMenu","Details","lazy","DeferredDetails","fallback","per","APICreateRoutes","DeferredAPICreateRoutes","Apis","exact","Date","now","render","AuthManager","isNotPublisher","content","flexGrow","Listing","location","query","string","contentInside","paddingTop","boxShadow","apiNameLink","TableView","listType","totalCount","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","MUIDataTableBodyCell","flexWrap","MuiTableBody","assign","createMuiTheme","rowsPerPage","page","intl","loading","xhrRequest","list","total","pagination","apisAndApiProducts","notFound","formatMessage","localStorage","setItem","composeQuery","all","defaultApiView","showToggle","getItem","prevRowsPerPage","parseInt","setListType","getData","userRowsPerPage","prevProps","newPage","columns","options","filter","label","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","rowIndex","apiName","apiId","strokeColor","sort","filterType","responsive","serverSide","onChangePage","changePage","selectableRows","onChangeRowsPerPage","newNumberOfRows","textLabels","customRowRender","dataIndex","doc","print","download","viewColumns","customToolbar","getMuiTheme","injectIntl","APIThumb","card","margin","maxWidth","transition","providerText","textTransform","apiDetails","apiActions","deleteProgress","green","thumbHeader","whiteSpace","overflow","textOverflow","imageWrapper","thumbContent","thumbLeft","alignSelf","thumbRight","thumbInfo","contextBox","lineHeight","imageOverlap","contentBackgroundColor","row","textWrapper","thumbBy","thumbRightBy","thumbRightByLabel","isHover","toggleMouseOver","loadingState","event","lifeCycleStatus","onMouseOver","onFocus","onMouseOut","onBlur","data-testid","gutterBottom","align","provider","context","transportType","undefined","minWidth","marginTop","marginBottom","bullet","transform","pos","caption","imageDisplay","maxHeight","APIThumbPlain","ImageView","showInfo","imageConf","setImageConf","imageObj","setIMageObj","aria-hidden","defaultApiImage","app","mt","DocThumb","thumbIcon","setIsHover","PrefixIcon","TextFieldsIcon","sourceType","PictureAsPdfIcon","DescriptionTwoToneIcon","LinkIcon","underline","RouterLink","LetterGenerator","charLength","ThumbIcon","bgColor","container","direction","justify","item","ml","associatedType","apiVersion","Fragment","DocThumbPlain","cardIcons","titleSpacing","APILanding","isXsOrBelow","useMediaQuery","breakpoints","down","landingPage","icons","graphqlIcon","restApiIcon","soapApiIcon","streamingApiIcon","noApisIcon","xs","pt","pb","md","mx","modal","statusBox","outline","initialTaskStates","create","inProgress","completed","errors","update","revision","deploy","publish","tasksReducer","SampleAPI","useReducer","tasksStatus","tasksStatusDispatcher","showStatus","setShowStatus","newSampleAPI","setNewSampleAPI","publisherSettings","usePublisherSettings","taskManager","promisedTask","taskResult","console","handleDeploySample","restApi","sampleAPIObj","getSampleAPIData","save","sampleAPI","updateSwagger","getSampleOpenAPI","revisionPayload","createRevision","sampleAPIRevision","envList","environment","map","env","deployRevisionPayload","getFirstVhost","envName","find","ev","vhosts","host","includes","displayOnDevportal","vhost","revisionId","deployRevision","allDone","tasks","reduce","done","current","anyErrors","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","bgcolor","p","completedMessage","inProgressMessage","TaskState","code","lg","thickness","button","mainTitleWrapper","APICreateMenu","getTitleForArtifactType","isSingular","TopMenu","mainTitle","px","mb","m","mr","arrayOf","object","dividerCls","popover","up","isNotCreator","buttonProps","menuList","orientation","ServiceCatalogMenu","apiCreateMenu","MenuButton","handleToggle","handleClose","anchorEl","currentTarget","contains","target","aria-owns","aria-haspopup","placement","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","TransitionProps","transformOrigin","onClickAway","element","apiproductAddIcon","subTitle","iconName","kwargs","properties","isDefaultVersion","transport","visibility","endpointConfig","endpoint_type","sandbox_endpoints","production_endpoints","_data","prototype","hasOwnProperty","call","getType","Resource","_requestMetaData","client","getSettings","promiseMonetization","getAPIMonetization","addAPIMonetization","promisePolicies","getAPISubscriptionPolicies","promiseInvoice","getSubscriptionUsage","subscriptionId","spec","components","schemas","keys","forEach","apiAttribute","requestBody","createAPIProduct","apiData","payload","resource","userExcludes","copy","excludes","prop","updatedProperties","updatedAPI","toJSON","apiProductId","updateAPIProduct","imageFile","updateAPIProductThumbnail","file","addAPIProductDocument","promisedDocuments","getAPIProductDocuments","productId","docId","documentId","updateAPIProductDocument","getAPIProductDocument","inlineContent","addAPIProductDocumentContent","getAPIProductDocumentContent","deleteAPIProductDocument","fileToDocument","getAPIProductRevisions","createAPIProductRevision","deleteAPIProductRevision","exportAPIProduct","undeployAPIProductRevision","deployAPIProductRevision","restoreAPIProductRevision","deploymentId","APIClientFactory","getAPIClient","Utils","getCurrentEnvironment","CONST","API_CLIENT","updateAPIProductDeployment","swagger","apiDefinition","stringify","put_api_products__apiProductId__swagger","promiseGet","getAPIProductSwagger","getAPIProduct","params","entries","getAllAPIProducts","obj","deleteAPIProduct","linkRoot","menu","LandingMenuItem","toLowerCase","boxTransition","overlayBox","overlayCloseButton","float","isCollapsed","setIsCollapsed","isFadeOut","setIsFadeOut","sm","borderColor","minHeight","blue","e","preventDefault","stopPropagation","onExited","enter","exit"],"mappings":"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","file":"DeferredAPIs.5a695d6e10db833098e1.bundle.js","sourcesContent":["/**\n * Note: This component was taken from MUI Lab until it's moved to core components and we migrate to 5.x\n * https://github.com/mui-org/material-ui/tree/master/packages/material-ui-lab/src/Alert\n * For component documentation see https://material-ui.com/components/alert\n * `outlinedWaiting` Style added separately\n */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nimport SuccessOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport const styles = (theme) => {\n    const getColor = theme.palette.type === 'light' ? darken : lighten;\n    const getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n\n    return {\n        /* Styles applied to the root element. */\n        root: {\n            ...theme.typography.body2,\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: 'transparent',\n            display: 'flex',\n            padding: '6px 16px',\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n        standardSuccess: {\n            color: getColor(theme.palette.success.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n            '& $icon': {\n                color: theme.palette.success.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n        standardInfo: {\n            color: getColor(theme.palette.info.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n            '& $icon': {\n                color: theme.palette.info.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n        standardWarning: {\n            color: getColor(theme.palette.warning.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n            '& $icon': {\n                color: theme.palette.warning.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n        standardError: {\n            color: getColor(theme.palette.error.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n            '& $icon': {\n                color: theme.palette.error.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n        outlinedSuccess: {\n            color: getColor(theme.palette.success.main, 0.6),\n            border: `1px solid ${theme.palette.success.main}`,\n            '& $icon': {\n                color: theme.palette.success.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n        outlinedInfo: {\n            color: getColor(theme.palette.info.main, 0.6),\n            border: `1px solid ${theme.palette.info.main}`,\n            '& $icon': {\n                color: theme.palette.info.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n        outlinedWarning: {\n            color: getColor(theme.palette.warning.main, 0.6),\n            border: `1px solid ${theme.palette.warning.main}`,\n            '& $icon': {\n                color: theme.palette.warning.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n        outlinedError: {\n            color: getColor(theme.palette.error.main, 0.6),\n            border: `1px solid ${theme.palette.error.main}`,\n            '& $icon': {\n                color: theme.palette.error.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n        filledSuccess: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.success.main,\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n        filledInfo: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.info.main,\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n        filledWarning: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.warning.main,\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n        filledError: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.error.main,\n        },\n        /* Styles applied to the icon wrapper element. */\n        icon: {\n            marginRight: 12,\n            padding: '7px 0',\n            display: 'flex',\n            fontSize: 22,\n            opacity: 0.9,\n        },\n        /* Styles applied to the message wrapper element. */\n        message: {\n            padding: '8px 0',\n        },\n        /* Styles applied to the action wrapper element if `action` is provided. */\n        action: {\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 'auto',\n            paddingLeft: 16,\n            marginRight: -8,\n        },\n        plainWaiting: {\n            color: getColor(theme.palette.text.secondary, 0.6),\n            '& $icon': {\n                color: theme.palette.text.secondary,\n            },\n        },\n        plainSuccess: {\n            color: getColor(theme.palette.success.main, 0.6),\n            '& $icon': {\n                color: theme.palette.success.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n        plainInfo: {\n            color: getColor(theme.palette.info.main, 0.6),\n            '& $icon': {\n                color: theme.palette.info.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n        plainWarning: {\n            color: getColor(theme.palette.warning.main, 0.6),\n            '& $icon': {\n                color: theme.palette.warning.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n        plainError: {\n            color: getColor(theme.palette.error.main, 0.6),\n            '& $icon': {\n                color: theme.palette.error.main,\n            },\n        },\n    };\n};\n\nconst defaultIconMapping = {\n    success: <SuccessOutlinedIcon fontSize='inherit' />,\n    warning: <ReportProblemOutlinedIcon fontSize='inherit' />,\n    error: <ErrorOutlineIcon fontSize='inherit' />,\n    info: <InfoOutlinedIcon fontSize='inherit' />,\n    waiting: <MoreHorizIcon fontSize='inherit' />,\n};\n\nconst Alert = React.forwardRef((props, ref) => {\n    const {\n        action,\n        children,\n        classes,\n        className,\n        closeText = 'Close',\n        color,\n        icon,\n        iconMapping = defaultIconMapping,\n        onClose,\n        role = 'alert',\n        severity = 'success',\n        variant = 'standard',\n        ...other\n    } = props;\n\n    return (\n        <Paper\n            role={role}\n            square\n            elevation={0}\n            className={clsx(\n                classes.root,\n                classes[`${variant}${capitalize(color || severity)}`],\n                className,\n            )}\n            ref={ref}\n            {...other}\n        >\n            {icon !== false ? (\n                <div className={classes.icon}>\n                    {icon || iconMapping[severity] || defaultIconMapping[severity]}\n                </div>\n            ) : null}\n            <div className={classes.message}>{children}</div>\n            {action != null ? <div className={classes.action}>{action}</div> : null}\n            {action == null && onClose ? (\n                <div className={classes.action}>\n                    <IconButton\n                        size='small'\n                        aria-label={closeText}\n                        title={closeText}\n                        color='inherit'\n                        onClick={onClose}\n                    >\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            ) : null}\n        </Paper>\n    );\n});\nexport default withStyles(styles, { name: 'MuiAlert' })(Alert);\n","import React from 'react';\n\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core/';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport API from 'AppData/api';\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    deleteWrapper: {\n        flex: 0,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: theme.spacing(2),\n    },\n    delete: {\n        color: theme.custom.apis.listing.deleteButtonColor,\n        cursor: 'pointer',\n        padding: theme.spacing(0.4),\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n    inlineBlock: {\n        display: 'inline-block',\n        paddingRight: 10,\n    },\n    flexBox: {\n        display: 'flex',\n        paddingRight: 10,\n    },\n});\n\n/**\n * Handle Delete an API from API Overview/Details page\n *\n * @class DeleteApiButton\n * @extends {React.Component}\n */\nclass DeleteApiButton extends React.Component {\n    /**\n     *Creates an instance of DeleteApiButton.\n     * @param {*} props @inheritDoc\n     * @memberof DeleteApiButton\n     */\n    constructor(props) {\n        super(props);\n        this.handleApiDelete = this.handleApiDelete.bind(this);\n        this.handleRequestClose = this.handleRequestClose.bind(this);\n        this.handleRequestOpen = this.handleRequestOpen.bind(this);\n        this.state = { openMenu: false };\n    }\n\n    /**\n     * Handle Delete button close event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestClose() {\n        this.setState({ openMenu: false });\n    }\n\n    /**\n     * Handle Delete button onClick event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestOpen() {\n        this.setState({ openMenu: true });\n    }\n\n    /**\n     *\n     * Send API delete REST API request\n     * @param {*} e\n     * @memberof DeleteApiButton\n     */\n    handleApiDelete() {\n        const {\n            api: { id, name }, setLoading, updateData, isAPIProduct, history,\n        } = this.props;\n        if (isAPIProduct) {\n            const promisedDelete = API.deleteProduct(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info('Something went wrong while deleting the API Product!');\n                        return;\n                    }\n                    Alert.info(`API Product ${name} deleted Successfully`);\n                    if (updateData) {\n                        updateData(id);\n                        setLoading(false);\n                    } else {\n                        history.push('/api-products');\n                    }\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while deleting the API Product!');\n                    }\n                    setLoading(false);\n                });\n        } else {\n            const promisedDelete = API.delete(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info('Something went wrong while deleting the API!');\n                        return;\n                    }\n                    Alert.info(`API ${name} deleted Successfully`);\n                    if (updateData) {\n                        updateData(id);\n                        setLoading(false);\n                    } else {\n                        history.push('/apis');\n                    }\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while deleting the API!');\n                    }\n                    setLoading(false);\n                });\n        }\n    }\n\n    /**\n     *\n     * @inheritDoc\n     * @returns {React.Component} inherit docs\n     * @memberof DeleteApiButton\n     */\n    render() {\n        const {\n            api, onClick, classes, updateData,\n        } = this.props;\n        const type = api.apiType === API.CONSTS.APIProduct ? 'API Product ' : 'API ';\n        const version = api.apiType === API.CONSTS.APIProduct ? null : '-' + api.version;\n        const deleteHandler = onClick || this.handleApiDelete;\n\n        let path = resourcePath.SINGLE_API;\n\n        if (api.apiType === API.CONSTS.APIProduct) {\n            path = resourcePath.SINGLE_API_PRODUCT;\n        }\n\n        return (\n            <>\n                {/* allowing delete based on scopes */}\n                <ScopeValidation\n                    resourceMethod={resourceMethod.DELETE}\n                    resourcePath={path}\n                >\n                    <Box\n                        className={classNames({ [classes.inlineBlock]: updateData, [classes.flexBox]: !updateData })}\n                    >\n                        {!updateData && (<VerticalDivider height={70} />)}\n                        <Box className={classes.delete}>\n                            <IconButton\n                                id='itest-id-deleteapi-icon-button'\n                                onClick={this.handleRequestOpen}\n                                onKeyDown={this.handleRequestOpen}\n                                className={classes.delete}\n                                disabled={isRestricted(['apim:api_delete'], api)}\n                                aria-label='delete'\n                                disableFocusRipple\n                                disableRipple\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n                            <Box\n                                fontFamily='fontFamily'\n                                fontSize='caption.fontSize'\n                                onClick={this.handleRequestOpen}\n                                onKeyDown={this.handleRequestOpen}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.components.DeleteApiButton.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </ScopeValidation>\n                <Dialog open={this.state.openMenu}>\n                    <DialogTitle>\n                        <FormattedMessage\n                            id='Apis.Details.components.DeleteApiButton.title'\n                            defaultMessage='Delete {type}'\n                            values={{ type }}\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.text.description'\n                                defaultMessage='{type} <b> {name} {version} </b> will be deleted permanently.'\n                                values={{\n                                    b: (msg) => <b>{msg}</b>,\n                                    type,\n                                    name: api.name,\n                                    version,\n                                }}\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button dense onClick={this.handleRequestClose}>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                        <Button\n                            id='itest-id-deleteconf'\n                            onClick={() => {\n                                deleteHandler();\n                                this.handleRequestClose();\n                            }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.delete'\n                                defaultMessage='Delete'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nDeleteApiButton.defaultProps = {\n    setLoading: () => {},\n};\n\nDeleteApiButton.propTypes = {\n    api: PropTypes.shape({\n        delete: PropTypes.func,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    setLoading: PropTypes.func,\n    updateData: PropTypes.func.isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(DeleteApiButton));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n}), 'Link');\n\nexports.default = _default;","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport ImageGenerator from './ImageGenerator';\nimport LetterGenerator from './LetterGenerator';\n\nconst useStyles = makeStyles((theme) => ({\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    thumbButton: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: '#0002',\n        color: '#000',\n        padding: 50,\n        borderRadius: 5,\n    },\n    thumbBackdrop: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.4,\n    },\n    thumb: {\n        '&:hover': {\n            zIndex: 1,\n            '& $thumbBackdrop': {\n                opacity: 0.2,\n            },\n        },\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n\nconst BaseThumbnail = (props) => {\n    const {\n        api, width, height, thumbnail: thumbnailPop,\n        selectedIcon: selectedIconProp,\n        color: colorProp,\n        backgroundIndex: backgroundIndexProp,\n        category: categoryProp,\n        isEditable,\n        onClick,\n        imageUpdate,\n    } = props;\n    const {\n        apiType, id, type,\n    } = api;\n    const classes = useStyles();\n    const [iconJson, setIconJson] = useState({});\n    const {\n        key,\n        color,\n        backgroundIndex,\n        category,\n    } = iconJson;\n    const [thumbnail, setThumbnail] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const theme = useTheme();\n    const { variant } = theme.custom.thumbnailTemplates;\n    useEffect(() => {\n        setIconJson({\n            selectedIcon: selectedIconProp,\n            color: colorProp,\n            backgroundIndex: backgroundIndexProp,\n            category: categoryProp,\n        });\n    }, [selectedIconProp, colorProp, backgroundIndexProp, categoryProp]);\n\n    useEffect(() => {\n        setThumbnail(thumbnailPop);\n    }, [thumbnailPop]);\n    /**\n     * Load the image from the backend and keeps in the component state\n     */\n    useEffect(() => {\n        if (type !== 'DOC') {\n            if (api.hasThumbnail !== null && api.hasThumbnail) {\n                const promisedThumbnail = apiType === Api.CONSTS.APIProduct\n                    ? new APIProduct().getAPIProductThumbnail(id)\n                    : new Api().getAPIThumbnail(id);\n\n                promisedThumbnail.then((response) => {\n                    if (response && response.data) {\n                        if (response.headers['content-type'] === 'application/json') {\n                            setThumbnail(null);\n                            setIconJson(response.body);\n                        } else if (response.headers['content-type'] === 'image/svg+xml') {\n                            const blob = new Blob([response.data], { type: 'image/svg+xml' });\n                            const url = windowURL.createObjectURL(blob);\n                            setThumbnail(url);\n                        } else if (response && response.data.size > 0) {\n                            const url = windowURL.createObjectURL(response.data);\n                            setThumbnail(url);\n                        }\n                    } else if (response && response.data === '') {\n                        setThumbnail(null);\n                        setIconJson({ key: null });\n                    }\n                }).finally(() => {\n                    setImageLoaded(true);\n                });\n            } else {\n                setThumbnail(null);\n                setIconJson({ key: null });\n                setImageLoaded(true);\n            }\n        } else {\n            setImageLoaded(true);\n        }\n    }, [imageUpdate]);\n    if (!imageLoaded) {\n        return (\n            <div className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </div>\n        );\n    }\n    let overviewPath = '';\n    if (apiType) {\n        overviewPath = apiType === Api.CONSTS.APIProduct\n            ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n    } else {\n        overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n    }\n    let view = (\n        <LetterGenerator\n            width={width}\n            height={height}\n            artifact={api}\n        />\n    );\n    // If configured the thumbnail variant as `image` or migrated from old thumbnail\n    if (variant === 'image' || key) {\n        view = (\n            <ImageGenerator\n                width={width}\n                height={height}\n                api={api}\n                fixedIcon={{\n                    key: key || selectedIconProp,\n                    color,\n                    backgroundIndex,\n                    category,\n                    api,\n                }}\n            />\n        );\n    }\n\n    return (\n        <>\n            {isEditable ? (\n                <ButtonBase\n                    focusRipple\n                    className={classes.thumb}\n                    onClick={onClick}\n                    aria-label='edit api thumbnail'\n                >\n                    {thumbnail\n                        ? (\n                            <img\n                                height={height}\n                                width={width}\n                                src={thumbnail}\n                                alt='API Thumbnail'\n                                className={classes.media}\n                            />\n                        )\n                        : view}\n                    <span className={classes.thumbBackdrop} />\n                    <span className={classes.thumbButton}>\n                        <Typography component='span' variant='subtitle1' color='inherit'>\n                            <EditIcon />\n                        </Typography>\n                    </span>\n                </ButtonBase>\n            ) : (\n                <Link className={classes.suppressLinkStyles} to={overviewPath} aria-label={api.name + ' Thumbnail'}>\n                    {thumbnail\n                        ? (\n                            <img\n                                height={height}\n                                width={width}\n                                src={thumbnail}\n                                alt='API Thumbnail'\n                                className={classes.media}\n                            />\n                        )\n                        : view}\n                </Link>\n            )}\n        </>\n    );\n};\nBaseThumbnail.defaultProps = {\n    height: 190,\n    width: 250,\n    isEditable: false,\n};\nBaseThumbnail.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    isEditable: PropTypes.bool,\n    imageUpdate: PropTypes.number.isRequired,\n};\nexport default BaseThumbnail;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Background from './Background';\n\nimport getIcon from './APICards/ImageUtils';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        '& span': {\n            position: 'absolute',\n            left: '50%',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        if (!str) str = 'default';\n        let colorPair;\n        let randomBackgroundIndex;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        const iconElement = getIcon(key, category, theme, api);\n\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (typeof backgroundIndex === 'number' && colorPairs.length > backgroundIndex) {\n            // Obtain or generate background color pair\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height, marginLeft: -height / 2, color }}>\n                    {iconElement}\n                </Icon>\n                {(!theme.custom.thumbnailTemplates || !theme.custom.thumbnailTemplates.active) && (\n                    <Background width={width} height={height} colorPair={colorPair} />\n                )}\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    iconSettings: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage}>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    width: PropTypes.shape({}).isRequired,\n    height: PropTypes.shape({}).isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst getIcon = (key, category, theme, api) => {\n    let IconElement;\n\n    // Creating the icon\n    if (key && category) {\n        IconElement = key;\n    } else if (api.type === 'DOC') {\n        IconElement = theme.custom.thumbnail.document.icon;\n    } else {\n        IconElement = 'settings';\n    }\n    return IconElement;\n};\n\nexport default getIcon;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport queryString from 'query-string';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\nimport SampleAPI from 'AppComponents/Apis/Listing/SampleAPI/SampleAPI';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Configurations from 'Config';\nimport API from 'AppData/api';\n\nconst RestAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    const { alwaysShowDeploySampleButton } = Configurations.apis;\n    const [showSampleDeploy, setShowSampleDeploy] = useState(false);\n\n    useEffect(() => {\n        if (isCreateMenu) {\n            const composeQuery = '?query=name:PizzaShackAPI version:1.0 context:pizzashack';\n            const composeQueryJSON = queryString.parse(composeQuery);\n            composeQueryJSON.limit = 1;\n            composeQueryJSON.offset = 0;\n            API.search(composeQueryJSON).then((resp) => {\n                const data = JSON.parse(resp.data);\n                setShowSampleDeploy(data.count === 0);\n            });\n        } else {\n            setShowSampleDeploy(true);\n        }\n    }, []);\n\n    return (\n        <Component\n            id='itest-rest-api-create-menu'\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.rest.api'\n                    defaultMessage='REST API'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-landing-rest-create-default'\n                linkTo='/apis/create/rest'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.rest.api.scratch.content'\n                        defaultMessage='Design and prototype a new REST API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.rest.api.scratch.title'\n                    defaultMessage='Start From Scratch'\n                />\n            </LandingMenuItem>\n\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-landing-upload-oas'\n                linkTo='/apis/create/openapi'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.rest.api.import.open.content'\n                        defaultMessage='Import OAS 3 or Swagger 2.0 definition'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.rest.api.import.open.title'\n                    defaultMessage='Import Open API'\n                />\n            </LandingMenuItem>\n            {(!isCreateMenu || (isCreateMenu && alwaysShowDeploySampleButton)) && showSampleDeploy && (\n                <>\n                    <Box width={1}>\n                        <Divider light variant='middle' />\n                    </Box>\n                    <SampleAPI dense={dense} />\n                </>\n            )}\n        </Component>\n    );\n};\n\nexport default RestAPIMenu;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11 15h2v2h-2v-2zm0-8h2v6h-2V7zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutlineOutlined');\n\nexports.default = _default;","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst SoapAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    return (\n        <Component\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.soap.api'\n                    defaultMessage='SOAP API'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-soap-api'\n                linkTo='/apis/create/wsdl'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.soap.import.wsdl.content'\n                        defaultMessage='Generate REST or create a pass-through API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.soap.import.wsdl.title'\n                    defaultMessage='Import WSDL'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default SoapAPIMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst GraphqlAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n\n    return (\n        <Component\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.graphql.api'\n                    defaultMessage='GraphQL'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-graphql-api'\n                linkTo='/apis/create/graphQL'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.graphql.import.sdl.content'\n                        defaultMessage='Use an existing definition'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.graphql.import.sdl.title'\n                    defaultMessage='Import GraphQL SDL'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default GraphqlAPIMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst StreamingAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    return (\n        <Component\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.api'\n                    defaultMessage='Streaming API'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-ws'\n                linkTo='/apis/create/streamingapi/ws'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.design.new.ws.content'\n                        defaultMessage='Create a Web Socket API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.design.new.title'\n                    defaultMessage='Web Socket API'\n                />\n            </LandingMenuItem>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-web-hook'\n                linkTo='/apis/create/streamingapi/websub'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.websub.content'\n                        defaultMessage='Create a Webhook/WebSub API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.websub.title'\n                    defaultMessage='Webhook API'\n                />\n            </LandingMenuItem>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-sse'\n                linkTo='/apis/create/streamingapi/sse'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.sse.content'\n                        defaultMessage='Create a Server-Sent Events API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.sse.title'\n                    defaultMessage='SSE API'\n                />\n            </LandingMenuItem>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-import'\n                linkTo='/apis/create/asyncapi'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.import.content'\n                        defaultMessage='Upload a file or provide an Async API URL'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.import.title'\n                    defaultMessage='Import an AsyncAPI'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default StreamingAPIMenu;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Progress from 'AppComponents/Shared/Progress';\nimport AuthManager from 'AppData/AuthManager';\n\nimport Listing from './Listing/Listing';\n\n/* if needs to pre fetch use 'webpackPrefetch: true' */\n\nconst Details = lazy(() => import('./Details/index' /* webpackChunkName: \"DeferredDetails\" */));\nconst DeferredDetails = (props) => (\n    <Suspense fallback={<Progress per={50} message='Loading Details component ...' />}>\n        <Details {...props} />\n    </Suspense>\n);\n\nconst APICreateRoutes = lazy(\n    () => import(/* webpackPrefetch: true */ './Create/APICreateRoutes' /* webpackChunkName: \"APICreateRoutes\" */),\n);\nconst DeferredAPICreateRoutes = (props) => (\n    <Suspense fallback={<Progress per={70} message='Loading API Create component ...' />}>\n        <APICreateRoutes {...props} />\n    </Suspense>\n);\n\n/**\n * Have used key={Date.now()} for `Route` element in `/apis` and `/api-products`\n */\nconst Apis = () => {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/apis'\n                key={Date.now()}\n                render={(props) => <Listing {...props} isAPIProduct={false} />}\n            />\n            <Route\n                exact\n                path='/api-products'\n                key={Date.now()}\n                render={(props) => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <Listing {...props} isAPIProduct />;\n                    }\n                }}\n            />\n            <Route path='/apis/search' render={(props) => <Listing {...props} isAPIProduct={false} />} />\n            <Route path='/apis/create' component={DeferredAPICreateRoutes} />\n            <Route\n                path='/api-products/create'\n                render={() => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <DeferredAPICreateRoutes />;\n                    }\n                }}\n            />\n            <Route path='/apis/:apiUUID/' render={(props) => <DeferredDetails {...props} isAPIProduct={false} />} />\n            <Route\n                path='/api-products/:apiProdUUID/'\n                render={(props) => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <DeferredDetails {...props} isAPIProduct />;\n                    }\n                }}\n            />\n        </Switch>\n    );\n};\n\nexport default Apis;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: DO we need this component ? this is a pure proxy just passing the props through this to children ? ~tmkb\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableView from './TableView/TableView';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n/**\n * Render the APIs Listing page, This is the Default Publisher Landing page as well\n *\n * @function Listing\n * @returns {React.Component} @inheritdoc\n */\nfunction Listing(props) {\n    const {\n        classes, isAPIProduct, theme, location: { search },\n    } = props;\n    // TODO: need to handle this search case separately ~tmkb\n    return (\n        <main className={classes.content}>\n            <TableView isAPIProduct={isAPIProduct} theme={theme} query={search} />\n        </main>\n    );\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({\n        content: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(Listing);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@material-ui/core/Icon';\nimport ApiThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/ApiThumb';\nimport DocThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/DocThumb';\nimport { Progress } from 'AppComponents/Shared';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APILanding from 'AppComponents/Apis/Listing/Landing';\nimport TopMenu from 'AppComponents/Apis/Listing/components/TopMenu';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport SampleAPIProduct from 'AppComponents/Apis/Listing/SampleAPI/SampleAPIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = (theme) => ({\n    contentInside: {\n        padding: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        '& > div[class^=\"MuiPaper-root-\"]': {\n            boxShadow: 'none',\n            backgroundColor: 'transparent',\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(),\n        },\n        '& span.material-icons': {\n            marginLeft: 0,\n            color: '#444',\n            marginRight: theme.spacing(),\n            fontSize: 18,\n        },\n    },\n});\n\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass TableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable toggle buttons\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[defaultApiView.length - 1];\n        } else {\n            defaultApiView = localStorage.getItem('publisher.listType') || defaultApiView;\n        }\n        const prevRowsPerPage = parseInt(localStorage.getItem('publisher.rowsPerPage'), 10) || 10;\n        this.state = {\n            apisAndApiProducts: null,\n            notFound: true,\n            listType: defaultApiView,\n            loading: true,\n            totalCount: -1,\n            rowsPerPage: prevRowsPerPage,\n            page: 0,\n        };\n        this.setListType = this.setListType.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        const { rowsPerPage, page } = this.state;\n        this.getData(rowsPerPage, page);\n        const userRowsPerPage = parseInt(localStorage.getItem('publisher.rowsPerPage'), 10);\n        if (userRowsPerPage) {\n            this.setState({ rowsPerPage: userRowsPerPage });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isAPIProduct, query } = this.props;\n        if (isAPIProduct !== prevProps.isAPIProduct || query !== prevProps.query) {\n            this.getData();\n        }\n    }\n\n    componentWillUnmount() {\n        // The foollowing is resetting the styles for the mui-datatables\n        const { theme } = this.props;\n        const themeAdditions = {\n            overrides: {\n                MUIDataTable: {\n                    tableRoot: {\n                        display: 'table',\n                        '& tbody': {\n                            display: 'table-row-group',\n                        },\n                        '& thead': {\n                            display: 'table-header-group',\n                        },\n                    },\n                },\n            },\n        };\n        Object.assign(theme, themeAdditions);\n    }\n\n    getMuiTheme = () => {\n        const { listType, totalCount } = this.state;\n        const { theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                    },\n                    tableRoot: {\n                        '& tbody': {\n                            backgroundColor: '#fff',\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                },\n            },\n        };\n        if (listType === 'grid') {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                backgroundColor: 'transparent',\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                    },\n                    MuiTableBody: {\n                        root: {\n                            justifyContent: totalCount > 4 ? 'center' : 'flex-start',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(theme, muiTheme, themeAdditions);\n        return createMuiTheme(muiTheme);\n    };\n\n    // get apisAndApiProducts\n    getData = (rowsPerPage, page) => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        return this.xhrRequest(rowsPerPage, page).then((data) => {\n            const { body } = data;\n            const { list, pagination } = body;\n            const { total } = pagination;\n            this.setState({\n                totalCount: total,\n                apisAndApiProducts: list,\n                notFound: false,\n                rowsPerPage,\n                page,\n            });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        }).finally(() => {\n            this.setState({ loading: false });\n        });\n    };\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    setListType = (value) => {\n        localStorage.setItem('publisher.listType', value);\n        this.setState({ listType: value });\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        const { rowsPerPage } = this.state;\n        this.setState({ loading: true });\n        this.xhrRequest(rowsPerPage, page).then((data) => {\n            const { body } = data;\n            const { list, pagination } = body;\n            this.setState({\n                apisAndApiProducts: list,\n                notFound: false,\n                totalCount: pagination.total,\n                page,\n            });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = (rowsPerPage, page) => {\n        const { isAPIProduct, query } = this.props;\n        if (query) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return API.search(composeQuery);\n        }\n        if (isAPIProduct) {\n            return APIProduct.all({ limit: rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return API.all({ limit: rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    /**\n     *\n     * Update APIs list if an API get deleted in card or table view\n     * @param {String} apiUUID UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    updateData() {\n        const { rowsPerPage, page, totalCount } = this.state;\n        let newPage = page;\n        if (totalCount - 1 === rowsPerPage * page && page !== 0) {\n            newPage = page - 1;\n        }\n        this.getData(rowsPerPage, newPage);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TableView\n     */\n    render() {\n        const {\n            intl, isAPIProduct, classes, query,\n        } = this.props;\n        const {\n            loading, totalCount, rowsPerPage, apisAndApiProducts, notFound, listType, page,\n        } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                            const artifact = tableViewObj.state.apisAndApiProducts[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[1];\n                            const apiId = tableMeta.rowData[0];\n                            if (isAPIProduct) {\n                                return (\n                                    <Link to={'/api-products/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api-product' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents/' + apiId + '/details'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n                                            <FormattedMessage\n                                                id='Apis.Listing.TableView.TableView.doc.flag'\n                                                defaultMessage=' [Doc]'\n                                            />\n                                            <span>{apiName}</span>\n                                        </Link>\n                                    );\n                                }\n                                return (\n                                    <Link to={'/apis/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n        ];\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            search: false,\n            count: totalCount,\n            serverSide: true,\n            page,\n            onChangePage: this.changePage,\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (newNumberOfRows) => {\n                let newPage;\n                if (page * newNumberOfRows > totalCount) {\n                    newPage = 0;\n                } else if (totalCount - 1 === newNumberOfRows * page && page !== 0) {\n                    newPage = page - 1;\n                }\n                localStorage.setItem('publisher.rowsPerPage', newNumberOfRows);\n                this.getData(newNumberOfRows, newPage);\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                },\n            },\n        };\n        if (listType === 'grid') {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                const artifact = tableViewObj.state.apisAndApiProducts[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <DocThumb doc={artifact} />;\n                    } else if (artifact.type === 'APIPRODUCT') {\n                        artifact.state = 'PUBLISHED';\n                        return <ApiThumb api={artifact} isAPIProduct updateData={this.updateData} />;\n                    } else {\n                        return (\n                            <ApiThumb api={artifact} isAPIProduct={isAPIProduct} updateData={this.updateData} />\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.customRowRender = null;\n            options.title = true;\n            options.filter = false;\n            options.print = true;\n            options.download = true;\n            options.viewColumns = true;\n        }\n        if (page === 0 && totalCount <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (!apisAndApiProducts) {\n            return <Progress per={90} message='Loading APIs ...' />;\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        if (apisAndApiProducts.length === 0 && !query) {\n            return (\n                <>\n                    <TopMenu\n                        data={apisAndApiProducts}\n                        count={totalCount}\n                        setListType={this.setListType}\n                        isAPIProduct={isAPIProduct}\n                        listType={listType}\n                        showToggle={this.showToggle}\n                    />\n                    {isAPIProduct ? (\n                        <SampleAPIProduct />\n                    ) : (\n                        <APILanding />\n                    )}\n                </>\n            );\n        }\n\n        return (\n            <>\n                <TopMenu\n                    data={apisAndApiProducts}\n                    count={totalCount}\n                    setListType={this.setListType}\n                    isAPIProduct={isAPIProduct}\n                    listType={listType}\n                    showToggle={this.showToggle}\n                    query={query}\n                />\n                <div className={classes.contentInside}>\n                    {loading ? (\n                        <Progress\n                            per={96}\n                            message='Updating page ...'\n                        />\n                    )\n                        : (\n                            <MuiThemeProvider theme={this.getMuiTheme()}>\n                                <MUIDataTable title='' data={apisAndApiProducts} columns={columns} options={options} />\n                            </MuiThemeProvider>\n                        )}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(TableView));\n\nTableView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func.isRequired }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    query: PropTypes.string,\n};\n\nTableView.defaultProps = {\n    query: '',\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport ApiThumbClassic from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/ApiThumbClassic';\nimport APIThumbPlain from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/APIThumbPlain';\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nexport default function APIThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <ApiThumbClassic {...props} />\n        );\n    }\n    return (\n        <APIThumbPlain {...props} />\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport API from 'AppData/api';\nimport DeleteApiButton from 'AppComponents/Apis/Details/components/DeleteApiButton';\n\nimport BaseThumbnail from '../BaseThumbnail';\n\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    providerText: {\n        textTransform: 'capitalize',\n    },\n    apiDetails: { padding: theme.spacing(1) },\n    apiActions: { justifyContent: 'space-between', padding: `0px 0px ${theme.spacing(1)}px 8px` },\n    deleteProgress: {\n        color: green[200],\n        position: 'absolute',\n        marginLeft: '200px',\n    },\n    thumbHeader: {\n        width: '90%',\n        whiteSpace: 'nowrap',\n        color: theme.palette.text.secondary,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    contextBox: {\n        width: '110px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    thumbRightBy: {\n        'margin-right': '5px',\n        height: 18,\n        borderRadius: 8,\n    },\n    thumbRightByLabel: {\n        paddingLeft: 5,\n        paddingRight: 5,\n    },\n});\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass APIThumb extends Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isHover: false, loading: false };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n        this.setLoading = this.setLoading.bind(this);\n    }\n\n    /**\n     *\n     * Set loading state\n     * @param {String} loadingState New state value\n     * @memberof APIThumb\n     */\n    setLoading(loadingState) {\n        this.setState({ loading: loadingState });\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            classes, api, isAPIProduct, theme, updateData,\n        } = this.props;\n        const { isHover, loading } = this.state;\n        let overviewPath = '';\n        if (api.apiType) {\n            overviewPath = isAPIProduct ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n        } else {\n            overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n        }\n        if (isAPIProduct) {\n            api.apiType = API.CONSTS.APIProduct;\n        } else {\n            api.apiType = API.CONSTS.API;\n        }\n\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                elevation={isHover ? 4 : 1}\n                className={classes.card}\n                data-testid={'card-' + api.name + api.version}\n            >\n                <CardMedia\n                    src='None'\n                    component={BaseThumbnail}\n                    height={theme.custom.thumbnail.height}\n                    width={theme.custom.thumbnail.width}\n                    title='Thumbnail'\n                    api={api}\n                />\n                <CardContent className={classes.apiDetails}>\n                    <div className={classes.textWrapper}>\n                        <Link to={overviewPath}>\n                            <Typography\n                                gutterBottom\n                                variant='h4'\n                                className={classes.thumbHeader}\n                                title={api.name}\n                                id={api.name}\n                            >\n                                {api.name}\n                            </Typography>\n                        </Link>\n                    </div>\n                    <div className={classes.row}>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.thumbBy}>\n                            <FormattedMessage id='by' defaultMessage='By' />\n                            <FormattedMessage id='colon' defaultMessage=' : ' />\n                            {api.provider}\n                        </Typography>\n                    </div>\n                    <div className={classes.thumbInfo}>\n                        {isAPIProduct ? null : (\n                            <div className={classes.row}>\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='subtitle1'>{api.version}</Typography>\n                                </div>\n\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='caption' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        )}\n                        <div className={classes.row}>\n                            <div className={classes.thumbRight}>\n                                <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                    {api.context}\n                                </Typography>\n                            </div>\n\n                            <div className={classes.thumbRight}>\n                                <Typography variant='caption' gutterBottom align='right' className={classes.context}>\n                                    {api.type === 'WS' ? (\n                                        <FormattedMessage\n                                            defaultMessage='Channel'\n                                            id='Apis.Listing.ApiThumb.channel'\n                                        />\n                                    ) : (\n                                        <FormattedMessage\n                                            defaultMessage='Context'\n                                            id='Apis.Listing.ApiThumb.context'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n                </CardContent>\n                <CardActions className={classes.apiActions} data-testid={'card-action-' + api.name + api.version}>\n                    <Chip\n                        size='small'\n                        classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                        label={api.apiType === API.CONSTS.APIProduct ? api.state : api.lifeCycleStatus}\n                        color='default'\n                        data-testid='itest-api-lifecycleState'\n                    />\n                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                        <Chip\n                            size='small'\n                            classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            label={api.transportType === undefined\n                                ? api.type : api.transportType}\n                            color='primary'\n                        />\n                    )}\n                    {(api.type === 'WS') && (\n                        <Chip\n                            size='small'\n                            classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            label='WEBSOCKET'\n                            color='primary'\n                        />\n                    )}\n                    {(api.type === 'WEBSUB') && (\n                        <Chip\n                            size='small'\n                            classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            label='WEBSUB'\n                            color='primary'\n                        />\n                    )}\n                    {!isRestricted(['apim:api_create'], api) && (\n                        <>\n                            <DeleteApiButton\n                                setLoading={this.setLoading}\n                                api={api}\n                                updateData={updateData}\n                                isAPIProduct={isAPIProduct}\n                            />\n                            {loading && <CircularProgress className={classes.deleteProgress} />}\n                        </>\n                    )}\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nAPIThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiType: PropTypes.string.isRequired,\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    updateData: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(APIThumb));\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Api from 'AppData/api';\nimport DeleteApiButton from 'AppComponents/Apis/Details/components/DeleteApiButton';\nimport Configurations from 'Config';\n\nimport getIcon from './ImageUtils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200,\n        marginTop: 10,\n        marginBottom: 10,\n        marginRight: 10,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    thumbHeader: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        paddingLeft: '5px',\n    },\n    caption: {\n        color: theme.palette.grey[700],\n    },\n    imageDisplay: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    },\n    thumbRightBy: {\n        'margin-right': '5px',\n        height: 18,\n        borderRadius: 8,\n    },\n    thumbRightByLabel: {\n        paddingLeft: 5,\n        paddingRight: 5,\n    },\n}));\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nfunction APIThumbPlain(props) {\n    const theme = useTheme();\n    const classes = useStyles();\n    const {\n        api, showInfo, isAPIProduct, updateData,\n    } = props;\n    const { custom: { thumbnail } } = theme;\n    const {\n        name, version, context, provider,\n    } = api;\n\n    const [imageConf, setImageConf] = useState({\n        selectedIcon: '',\n        category: '',\n        color: '#ccc',\n    });\n    const [imageObj, setIMageObj] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    setImageConf({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                    });\n                } else if (response && response.data.size > 0) {\n                    setIMageObj(windowURL.createObjectURL(response.data));\n                }\n            }\n        }).finally(() => {\n            setImageLoaded(true);\n        });\n    }, []);\n    let ImageView;\n    if (!imageLoaded) {\n        ImageView = (\n            <div className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </div>\n        );\n    } else if (imageObj) {\n        ImageView = (\n            <img\n                src={imageObj}\n                alt='API Thumbnail'\n                className={classes.imageDisplay}\n            />\n        );\n    } else {\n        ImageView = (\n            <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: imageConf.color }}>\n                {getIcon(imageConf.selectedIcon, imageConf.category, theme, api)}\n            </Icon>\n        );\n    }\n\n    if (!showInfo) {\n        return (\n            <Link to={'/apis/' + api.id} aria-hidden='true'>\n                <Box display='flex'>\n                    <Box>\n                        {!thumbnail.defaultApiImage && ImageView}\n                        {thumbnail.defaultApiImage\n                        && (\n                            <img\n                                src={Configurations.app.context + thumbnail.defaultApiImage}\n                                alt='img'\n                            />\n                        )}\n                    </Box>\n                </Box>\n\n            </Link>\n        );\n    }\n    return (\n        <Card className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box id={api.name}>\n                    <Link to={'/apis/' + api.id + '/overview'} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                {!thumbnail.defaultApiImage && ImageView}\n                                {thumbnail.defaultApiImage\n                                && <img src={Configurations.app.context + thumbnail.defaultApiImage} alt='img' />}\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={name}\n                                className={classes.thumbHeader}\n                            >\n                                {name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                {provider && (\n                    <>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='left'\n                            className={classes.caption}\n                            component='span'\n                        >\n                            <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                            <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                        </Typography>\n                        <Typography variant='body2' component='span'>{provider}</Typography>\n                    </>\n                )}\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{version}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {context}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                        </Typography>\n                    </Box>\n                </Box>\n\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        {!isAPIProduct && (\n                            <Chip\n                                label={api.apiType === Api.CONSTS.APIProduct ? api.state : api.lifeCycleStatus}\n                                color='default'\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            />\n                        )}\n                        {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label={api.transportType === undefined\n                                    ? api.type : api.transportType}\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WS') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='WEBSOCKET'\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WEBSUB') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='WEBSUB'\n                                color='primary'\n                            />\n                        )}\n                    </Box>\n                    {!isRestricted(['apim:api_create'], api) && (\n                        <>\n                            <DeleteApiButton\n                                setLoading={setLoading}\n                                api={api}\n                                updateData={updateData}\n                                isAPIProduct={isAPIProduct}\n                            />\n                            {loading && <CircularProgress className={classes.deleteProgress} />}\n                        </>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n}\n\n\nAPIThumbPlain.defaultProps = {\n    showInfo: true,\n};\nAPIThumbPlain.propTypes = {\n    showInfo: PropTypes.bool,\n    updateData: PropTypes.func.isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default APIThumbPlain;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport DocThumbClassic from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DocThumbClassic';\nimport DocThumbPlain from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DocThumbPlain';\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nexport default function DocThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    const { classes, doc } = props;\n\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <DocThumbClassic classes={classes} doc={doc} />\n        );\n    }\n    return (\n        <DocThumbPlain doc={doc} />\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport LetterGenerator from 'AppComponents/Apis/Listing/components/ImageGenerator/LetterGenerator';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\nimport LinkIcon from '@material-ui/icons/Link';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    thumbHeader: {\n        maxWidth: theme.spacing(16),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\n\n\nconst DocThumb = (props) => {\n    const { doc } = props;\n    const [isHover, setIsHover] = useState(false);\n    const toggleMouseOver = () => setIsHover(!isHover);\n    const classes = useStyles();\n    let thumbIcon;\n    let PrefixIcon = TextFieldsIcon;\n    if (doc.sourceType === 'FILE') {\n        PrefixIcon = PictureAsPdfIcon;\n        thumbIcon = DescriptionTwoToneIcon;\n    } else if (doc.sourceType === 'URL') {\n        PrefixIcon = LinkIcon;\n    }\n    return (\n        <Link\n            underline='none'\n            component={RouterLink}\n            to={'/apis/' + doc.apiUUID + '/documents/' + doc.id + '/details'}\n            aria-hidden='true'\n        >\n            <Card\n                onMouseOver={toggleMouseOver}\n                onFocus={toggleMouseOver}\n                onMouseOut={toggleMouseOver}\n                onBlur={toggleMouseOver}\n                elevation={isHover ? 4 : 1}\n                className={classes.card}\n            >\n                <CardMedia\n                    width={200}\n                    component={LetterGenerator}\n                    height={140}\n                    title='Thumbnail'\n                    artifact={{ name: 'Doc' }}\n                    charLength={3}\n                    ThumbIcon={thumbIcon}\n                    bgColor={false}\n                />\n                <CardContent>\n                    <Grid\n                        container\n                        direction='column'\n                        justify='space-evenly'\n                        alignItems='flex-start'\n                    >\n                        <Grid item>\n                            <Box display='flex' alignItems='center' flexDirection='row' fontFamily='fontFamily'>\n                                <Box display='flex'>\n                                    <PrefixIcon color='primary' />\n                                </Box>\n                                <Box\n                                    className={classes.thumbHeader}\n                                    color='text.primary'\n                                    fontSize='h4.fontSize'\n                                    ml={1}\n                                >\n                                    {doc.name}\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item>\n                            <Box mt={3} fontFamily='fontFamily'>\n                                <Box color='primary.main'>\n                                    {doc.associatedType}\n                                </Box>\n                                <Box color='text.primary' fontSize='h6.fontSize'>\n                                    {doc.apiName}\n                                </Box>\n                                <Box color='text.secondary' fontSize='body1.fontSize'>\n                                    Version:\n                                    {' '}\n                                    {doc.apiVersion}\n                                </Box>\n                            </Box>\n                        </Grid>\n\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Link>\n    );\n};\n\nDocThumb.propTypes = {\n    doc: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        sourceType: PropTypes.string.isRequired,\n        apiName: PropTypes.string.isRequired,\n        apiVersion: PropTypes.string.isRequired,\n    }).isRequired,\n};\nexport default DocThumb;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M2.5 4v3h5v12h3V7h5V4h-13zm19 5h-9v3h3v7h3v-7h3V9z\"\n}), 'TextFields');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z\"\n}), 'PictureAsPdf');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M13 4H6v16h12V9h-5V4zm3 14H8v-2h8v2zm0-6v2H8v-2h8z\",\n  opacity: \".3\"\n}), _react.default.createElement(\"path\", {\n  d: \"M8 16h8v2H8zm0-4h8v2H8zm6-10H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11z\"\n})), 'DescriptionTwoTone');\n\nexports.default = _default;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200,\n        marginTop: 10,\n        marginRight: 10,\n        marginBottom: 10,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    thumbHeader: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    caption: {\n        color: theme.palette.grey[700],\n    },\n    imageDisplay: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    },\n}));\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nfunction DocThumbPlain(props) {\n    const classes = useStyles();\n    const { doc } = props;\n    return (\n        <Card className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box>\n                    <Link to={'/apis/' + doc.apiUUID + '/documents/' + doc.id + '/details'} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: '#ccc' }}>\n                                    description\n                                </Icon>\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={doc.name}\n                                className={classes.thumbHeader}\n                            >\n                                {doc.name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                <Box mt={2}>\n                    <Typography variant='subtitle1' className={classes.contextBox}>\n                        {doc.apiName}\n                    </Typography>\n                    <Typography\n                        variant='caption'\n                        gutterBottom\n                        align='right'\n                        className={classes.caption}\n                        Component='div'\n                    >\n                        <FormattedMessage\n                            id='Apis.Listing.components.ImageGenerator.DocThumb.apiName'\n                            defaultMessage='API Name'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{doc.sourceType}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.sourceType'\n                                defaultMessage='Source Type:'\n                            />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {doc.apiVersion}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiVersion'\n                                defaultMessage='API Version'\n                            />\n                        </Typography>\n                    </Box>\n                </Box>\n\n\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default DocThumbPlain;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useTheme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Configurations from 'Config';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport RestAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/RestAPIMenu';\nimport SoapAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/SoapAPIMenu';\nimport GraphqlAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/GraphqlAPIMenu';\nimport StreamingAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/StreamingAPIMenu';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    cardIcons: {\n        width: 190,\n        paddingRight: theme.spacing(2),\n    },\n    titleSpacing: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst APILanding = () => {\n    const theme = useTheme();\n    const classes = useStyles();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('xs'));\n    const { root } = useStyles();\n    const {\n        graphqlIcon,\n        restApiIcon,\n        soapApiIcon,\n        streamingApiIcon,\n        noApisIcon,\n    } = theme.custom.landingPage.icons;\n\n    return (\n        <div className={root}>\n            {!isRestricted(['apim:api_create']) ? (\n                <Grid\n                    container\n                    direction='column'\n                    justify='center'\n                >\n                    <Grid item xs={12}>\n                        <Box pt={isXsOrBelow ? 2 : 7} />\n                    </Grid>\n                    <Grid item md={12}>\n                        <Typography\n                            id='itest-apis-welcome-msg'\n                            display='block'\n                            gutterBottom\n                            align='center'\n                            variant='h4'\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.SampleAPI.SampleAPI.create.new'\n                                defaultMessage='Let’s get started !'\n                            />\n                            <Box color='text.secondary' pt={2}>\n                                <Typography display='block' gutterBottom align='center' variant='body1'>\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.SampleAPI.create.new.description'\n                                        defaultMessage='Choose your option to create an API '\n                                    />\n                                </Typography>\n                            </Box>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Box pt={isXsOrBelow ? 2 : 7} pb={5} mx={isXsOrBelow ? 12 : 3}>\n                            <Grid\n                                container\n                                direction='row'\n                                justify='center'\n                                alignItems='flex-start'\n                                spacing={3}\n                            >\n                                <RestAPIMenu icon={restApiIcon} />\n                                <SoapAPIMenu icon={soapApiIcon} />\n                                <GraphqlAPIMenu icon={graphqlIcon} />\n                                <StreamingAPIMenu icon={streamingApiIcon} />\n                            </Grid>\n                        </Box>\n                    </Grid>\n                </Grid>\n            ) : (\n                <Grid\n                    container\n                    direction='column'\n                    justify='center'\n                    alignItems='center'\n                >\n                    <Grid item xs={12}>\n                        <Box pt={isXsOrBelow ? 8 : 28} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Box textAlign='center' pb={2}>\n                            <img\n                                className={classes.cardIcons}\n                                src={Configurations.app.context + noApisIcon}\n                                alt={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.Landing.index.no.apis.icon.alt.text'\n                                        defaultMessage='No APIs yet'\n                                    />\n                                )}\n                                aria-hidden='true'\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item md={12} className={classes.titleSpacing}>\n                        <Typography\n                            id='itest-apis-welcome-msg'\n                            display='block'\n                            gutterBottom\n                            align='center'\n                            variant='h4'\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.Landing.index.no.apis.title'\n                                defaultMessage='No APIs yet'\n                            />\n                            <Box color='text.secondary' pt={2}>\n                                <Typography display='block' gutterBottom align='center' variant='body1'>\n                                    <FormattedMessage\n                                        id='Apis.Listing.Landing.index.no.apis.description'\n                                        defaultMessage={'If you think this is by mistake, '\n                                        + 'please contact your administrator'}\n                                    />\n                                </Typography>\n                            </Box>\n                        </Typography>\n                    </Grid>\n                </Grid>\n            )}\n        </div>\n\n    );\n};\n\nexport default APILanding;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Redirect from 'react-router-dom/Redirect';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport TaskState from 'AppComponents/Apis/Listing/SampleAPI/components/TaskState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\n\nimport { getSampleAPIData, getSampleOpenAPI } from 'AppData/SamplePizzaShack';\n\n\nconst useStyles = makeStyles({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    statusBox: {\n        outline: 'none',\n    },\n});\n\nconst initialTaskStates = {\n    create: { inProgress: true, completed: false, errors: false },\n    update: { inProgress: false, completed: false, errors: false },\n    revision: { inProgress: false, completed: false, errors: false },\n    deploy: { inProgress: false, completed: false, errors: false },\n    publish: { inProgress: false, completed: false, errors: false },\n};\n\nconst tasksReducer = (state, action) => {\n    const { name, status } = action;\n    if (name === 'reset') {\n        return initialTaskStates;\n    }\n    // In the case of a key collision, the right-most (last) object's value wins out\n    return { ...state, [name]: { ...state[name], ...status } };\n};\n\n/**\n * Handle deploying a sample API (Create, Deploy and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\n\nconst SampleAPI = (props) => {\n    const { dense } = props;\n    const [tasksStatus, tasksStatusDispatcher] = useReducer(tasksReducer, initialTaskStates);\n    const [showStatus, setShowStatus] = useState(false);\n    const [newSampleAPI, setNewSampleAPI] = useState();\n    const classes = useStyles();\n    const publisherSettings = usePublisherSettings();\n\n    const theme = useTheme();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const taskManager = async (promisedTask, name) => {\n        tasksStatusDispatcher({ name, status: { inProgress: true } });\n        let taskResult;\n        try {\n            taskResult = await promisedTask;\n        } catch (errors) {\n            console.error(errors);\n            tasksStatusDispatcher({ name, status: { errors } });\n        }\n        tasksStatusDispatcher({ name, status: { inProgress: false, completed: true } });\n        return taskResult;\n    };\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof SampleAPI\n     */\n    const handleDeploySample = async () => {\n        setShowStatus(true);\n        const restApi = new API();\n\n        const sampleAPIObj = new API(getSampleAPIData());\n        // Creat the sample API -- 1st API call\n        const sampleAPI = await taskManager(sampleAPIObj.save(), 'create');\n        setNewSampleAPI(sampleAPI);\n\n        // Update the sample API -- 2nd API call\n        await taskManager(sampleAPI.updateSwagger(getSampleOpenAPI()), 'update');\n\n        if (!AuthManager.isNotPublisher()) {\n            const revisionPayload = {\n                description: 'Initial Revision',\n            };\n\n            // Creat a revision of sample API -- 3rd API call\n            const sampleAPIRevision = await taskManager(\n                restApi.createRevision(sampleAPI.id, revisionPayload),\n                'revision',\n            );\n            const envList = publisherSettings.environment.map((env) => env.name);\n            const deployRevisionPayload = [];\n            const getFirstVhost = (envName) => {\n                const env = publisherSettings.environment.find(\n                    (ev) => ev.name === envName && ev.vhosts.length > 0,\n                );\n                return env && env.vhosts[0].host;\n            };\n            if (envList && envList.length > 0) {\n                if (envList.includes('Default') && getFirstVhost('Default')) {\n                    deployRevisionPayload.push({\n                        name: 'Default',\n                        displayOnDevportal: true,\n                        vhost: getFirstVhost('Default'),\n                    });\n                } else if (getFirstVhost(envList[0])) {\n                    deployRevisionPayload.push({\n                        name: envList[0],\n                        displayOnDevportal: true,\n                        vhost: getFirstVhost(envList[0]),\n                    });\n                }\n            }\n            const revisionId = sampleAPIRevision.body.id;\n\n            // Deploy a revision of sample API -- 4th API call\n            await taskManager(restApi.deployRevision(sampleAPI.id,\n                revisionId, deployRevisionPayload), 'deploy');\n\n            // Deploy a revision of sample API -- 5th API call\n            await taskManager(sampleAPI.publish(), 'publish');\n        }\n    };\n\n    const allDone = !AuthManager.isNotPublisher() ? Object.values(tasksStatus)\n        .map((tasks) => tasks.completed)\n        .reduce((done, current) => current && done) : (tasksStatus.create.completed && newSampleAPI);\n    const anyErrors = Object.values(tasksStatus).map((tasks) => tasks.errors).find((error) => error !== false);\n    if (allDone && !anyErrors) {\n        const url = '/apis/' + newSampleAPI.id + '/overview';\n        return <Redirect to={url} />;\n    }\n    return (\n        <>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-deploy-sample'\n                onClick={handleDeploySample}\n                component='button'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.rest.d.sample.content'\n                        defaultMessage={`Sample Pizza Shack\n                                    API`}\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id={'Apis.Listing.SampleAPI.SampleAPI.'\n                        + 'rest.d.sample.title'}\n                    defaultMessage='Deploy Sample API'\n                />\n\n            </LandingMenuItem>\n\n            <Modal\n                aria-labelledby='transition-modal-title'\n                aria-describedby='transition-modal-description'\n                className={classes.modal}\n                open={showStatus}\n                // onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={showStatus}>\n                    <Box\n                        bgcolor='background.paper'\n                        borderRadius='borderRadius'\n                        width={isXsOrBelow ? 4 / 5 : 1 / 4}\n                        className={classes.statusBox}\n                        p={2}\n                    >\n                        <Grid\n                            container\n                            direction='row'\n                            justify='center'\n                            alignItems='center'\n                        >\n                            <TaskState\n                                completed={tasksStatus.create.completed}\n                                errors={tasksStatus.create.errors}\n                                inProgress={tasksStatus.create.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.create.complete'\n                                        defaultMessage='API created successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.create.inprogress'\n                                        defaultMessage='Creating sample API ...'\n                                    />\n                                )}\n                            >\n                                Create API\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.update.completed}\n                                errors={tasksStatus.update.errors}\n                                inProgress={tasksStatus.update.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.update.complete'\n                                        defaultMessage='API updated successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.update.inprogress'\n                                        defaultMessage='Updating sample API ...'\n                                    />\n                                )}\n                            >\n                                Update API\n                            </TaskState>\n                            {!AuthManager.isNotPublisher() && (\n                                <>\n                                    <TaskState\n                                        completed={tasksStatus.revision.completed}\n                                        errors={tasksStatus.revision.errors}\n                                        inProgress={tasksStatus.revision.inProgress}\n                                        completedMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.revision.complete'\n                                                defaultMessage='API revision created successfully!'\n                                            />\n                                        )}\n                                        inProgressMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.revision.inprogress'\n                                                defaultMessage='Creating a revision of sample API ...'\n                                            />\n                                        )}\n                                    >\n                                        Revision API\n                                    </TaskState>\n                                    <TaskState\n                                        completed={tasksStatus.deploy.completed}\n                                        errors={tasksStatus.deploy.errors}\n                                        inProgress={tasksStatus.deploy.inProgress}\n                                        completedMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.deploy.complete'\n                                                defaultMessage='API deployed successfully!'\n                                            />\n                                        )}\n                                        inProgressMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.deploy.inprogress'\n                                                defaultMessage='Deploying sample API ...'\n                                            />\n                                        )}\n                                    >\n                                        Deploying API\n                                    </TaskState>\n                                    <TaskState\n                                        completed={tasksStatus.publish.completed}\n                                        errors={tasksStatus.publish.errors}\n                                        inProgress={tasksStatus.publish.inProgress}\n                                        completedMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.publish.complete'\n                                                defaultMessage='API published successfully!'\n                                            />\n                                        )}\n                                        inProgressMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.publish.inprogress'\n                                                defaultMessage='Publishing sample API to developer portal ...'\n                                            />\n                                        )}\n                                    >\n                                        Publish API\n                                    </TaskState>\n                                </>\n                            )}\n                            {anyErrors && (\n                                <>\n                                    <Grid item xs={8} />\n                                    <Grid item xs={2}>\n                                        <Button\n                                            onClick={() => {\n                                                setShowStatus(false);\n                                                tasksStatusDispatcher({ name: 'reset' });\n                                            }}\n                                            variant='outlined'\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.continue.on.close'\n                                                defaultMessage='Close'\n                                            />\n                                        </Button>\n                                    </Grid>\n                                    {newSampleAPI && (\n                                        <Grid item xs={2}>\n                                            <Link\n                                                underline='none'\n                                                component={RouterLink}\n                                                to={`/apis/${newSampleAPI.id}/overview`}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Listing.SampleAPI.continue.on.error'\n                                                    defaultMessage='Continue'\n                                                />\n                                            </Link>\n                                        </Grid>\n                                    )}\n                                </>\n                            )}\n                        </Grid>\n                    </Box>\n                </Fade>\n            </Modal>\n        </>\n    );\n};\n\nexport default SampleAPI;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/MuiAlert';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @return {*}\n */\nexport default function TaskState(props) {\n    const {\n        completed, errors, inProgress, children, completedMessage, inProgressMessage,\n    } = props;\n    let severity;\n    let message = children;\n    if (completed) {\n        severity = 'success';\n        if (completedMessage) {\n            message = completedMessage;\n        }\n    } else if (inProgress) {\n        severity = 'info';\n        if (inProgressMessage) {\n            message = inProgressMessage;\n        }\n    } else {\n        severity = 'waiting';\n    }\n    if (errors) {\n        severity = 'error';\n        if (errors.response) {\n            const { body } = errors.response;\n            message = (\n                <>\n                    <b>\n                        [\n                        {body.code}\n                        ]\n                    </b>\n                    {' '}\n                    :\n                    {body.description}\n                </>\n            );\n        } else {\n            message = (\n                <>\n                    <FormattedMessage\n                        id='Apis.Listing.TaskState.generic.error.prefix'\n                        defaultMessage='Error while'\n                    />\n                    {' '}\n                    {inProgressMessage}\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid item md={2} lg={3} xs={3} />\n            <Grid item md={9} lg={8} xs={9}>\n                <Alert\n                    icon={inProgress ? <CircularProgress size={20} thickness={2} /> : null}\n                    variant={errors ? 'standard' : 'plain'}\n                    severity={severity}\n                >\n                    {message}\n                </Alert>\n            </Grid>\n            <Grid item md={1} lg={1} xs={0} />\n        </>\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4.59-12.42L10 14.17l-2.59-2.58L6 13l4 4 8-8z\"\n}), 'CheckCircleOutlineOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');\n\nexports.default = _default;","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/icons/List';\nimport GridOn from '@material-ui/icons/GridOn';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport APICreateMenu from './APICreateMenu';\n\nconst styles = (theme) => ({\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n    },\n    mainTitleWrapper: {\n        paddingLeft: 35,\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    APICreateMenu: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\n/**\n *\n * @param props\n * @returns {*}\n */\nfunction getTitleForArtifactType(props, count) {\n    const {\n        isAPIProduct, query,\n    } = props;\n    const isSingular = count === 1;\n    if (query) {\n        return isSingular ? (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.search.results.singular'\n                defaultMessage='Search result'\n            />\n        ) : (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.search.results' defaultMessage='Search results' />\n        );\n    } else if (isAPIProduct) {\n        return isSingular ? (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproduct.singular'\n                defaultMessage='API product'\n            />\n        ) : (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproducts.results'\n                defaultMessage='API products'\n            />\n        );\n    } else {\n        return isSingular ? (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.api.singular' defaultMessage='API' />\n        ) : (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n        );\n    }\n}\n\n/**\n *\n * Renders the top menu\n * @param {*} props\n * @returns JSX\n */\nfunction TopMenu(props) {\n    const {\n        classes, data, setListType, count, isAPIProduct, listType, showToggle, query,\n    } = props;\n    if (count > 0) {\n        return (\n            <div className={classes.root}>\n                <div className={classes.mainTitleWrapper}>\n                    {data && (\n                        <>\n                            <Typography variant='h5' className={classes.mainTitle} component='div'>\n                                {isAPIProduct && (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.apiproducts'\n                                        defaultMessage='API Products'\n                                    />\n                                )}\n                                { query && (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.unified.search'\n                                        defaultMessage='Unified search'\n                                    />\n                                )}\n                                { !query && !isAPIProduct && (\n                                    <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n                                )}\n                            </Typography>\n                            <Box\n                                fontFamily='fontFamily'\n                                fontSize='body1.fontSize'\n                                display='flex'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.displaying'\n                                    defaultMessage='Total:'\n                                />\n                                <Box\n                                    id='itest-apis-listing-total'\n                                    fontWeight='fontWeightBold'\n                                    px={0.5}\n                                    mb={0.5}\n                                >\n                                    {count}\n                                </Box>\n                                {getTitleForArtifactType(props, count)}\n                            </Box>\n                        </>\n                    )}\n                </div>\n                <VerticalDivider height={70} />\n                <div className={classes.APICreateMenu}>\n                    {isAPIProduct && (\n                        <Link to='/api-products/create'>\n                            <Button variant='contained' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.create.an.api.product'\n                                    defaultMessage='Create an API Product'\n                                />\n                            </Button>\n                        </Link>\n                    )}\n                    {!query && !isAPIProduct && (\n                        <APICreateMenu>\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.api'\n                                defaultMessage='Create API'\n                            />\n                        </APICreateMenu>\n                    )}\n                </div>\n                {showToggle && (\n                    <Box height={32} m='auto' mr={8}>\n                        <ButtonGroup color='primary' aria-label='outlined primary button group'>\n                            <IconButton onClick={() => setListType('grid')} aria-label='list'>\n                                <GridOn color={listType === 'grid' ? 'primary' : 'disabled'} />\n                            </IconButton>\n                            <IconButton onClick={() => setListType('list')} aria-label='grid'>\n                                <List color={listType === 'list' ? 'primary' : 'disabled'} />\n                            </IconButton>\n                        </ButtonGroup>\n                    </Box>\n                )}\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    setListType: PropTypes.func.isRequired,\n    listType: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    count: PropTypes.number.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    showToggle: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles)(TopMenu);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    useTheme,\n} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport AuthManager from 'AppData/AuthManager';\nimport RestAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/RestAPIMenu';\nimport SoapAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/SoapAPIMenu';\nimport GraphqlAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/GraphqlAPIMenu';\nimport StreamingAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/StreamingAPIMenu';\nimport ServiceCatalogMenu from 'AppComponents/Apis/Listing/Landing/Menus/ServiceCatalogMenu';\nimport MenuButton from 'AppComponents/Shared/MenuButton';\n\nconst useStyles = makeStyles((theme) => {\n    return {\n        dividerCls: {\n            height: '180px',\n            position: 'absolute',\n            top: '50%',\n            '-ms-transform': 'translateY(-50%)',\n            transform: 'translateY(-50%)',\n            margin: 'auto',\n        },\n        popover: {\n            [theme.breakpoints.down('sm')]: {\n                width: '95vw',\n            },\n            [theme.breakpoints.up('md')]: {\n                width: '85vw',\n            },\n            [theme.breakpoints.up('lg')]: {\n                width: '65vw',\n            },\n            paddingTop: theme.spacing(2),\n            paddingBottom: theme.spacing(2),\n        },\n    };\n});\n\nconst APICreateMenu = () => {\n    const theme = useTheme();\n    const { dividerCls, popover } = useStyles();\n    const {\n        graphqlIcon,\n        restApiIcon,\n        soapApiIcon,\n        streamingApiIcon,\n    } = theme.custom.landingPage.icons;\n    return (\n        !AuthManager.isNotCreator() && (\n            <MenuButton\n                buttonProps={{\n                    id: 'itest-create-api-menu-button',\n                    color: 'primary',\n                    variant: 'contained',\n                }}\n                menuList={(\n                    <Grid\n                        className={popover}\n                        container\n                        direction='row'\n                        justify='space-around'\n                        alignItems='flex-start'\n                        spacing={2}\n                    >\n                        <RestAPIMenu isCreateMenu icon={restApiIcon} />\n                        <SoapAPIMenu isCreateMenu icon={soapApiIcon} />\n                        <GraphqlAPIMenu isCreateMenu icon={graphqlIcon} />\n                        <StreamingAPIMenu isCreateMenu icon={streamingApiIcon} />\n                        <Box display={{ xs: 'none', md: 'block' }} mx={2}>\n                            <Divider className={dividerCls} light orientation='vertical' variant='inset' />\n                        </Box>\n                        <ServiceCatalogMenu isCreateMenu icon={streamingApiIcon} />\n                    </Grid>\n                )}\n            >\n                Create API\n            </MenuButton>\n        )\n    );\n};\nexport default APICreateMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// **** DEPRECATED ****\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\n/**\n * NOTE: This is no longer in use and deprecated !!!!\n * @param {Object} props Component interface\n * @returns\n */\nconst ServiceCatalogMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    return (\n        <Component\n            id='itest-rest-api-create-menu'\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.service.catalog.api'\n                    defaultMessage='Service Catalog'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-from-service-catalog'\n                linkTo='/service-catalog'\n            >\n                <FormattedMessage\n                    id='Apis.Listing.import.from.service.catalog.title'\n                    defaultMessage='Import From Service Catalog'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default ServiceCatalogMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        marginRight: theme.spacing(2),\n    },\n    position: {\n        display: 'inherit',\n        zIndex: theme.zIndex.apiCreateMenu,\n    },\n});\n\n/**\n * Button with dropdown menu\n *\n * @class MenuButton\n * @extends {React.Component}\n */\nclass MenuButton extends React.Component {\n    /**\n     *Creates an instance of MenuButton.\n     * @param {Object} props @inheritdoc\n     * @memberof MenuButton\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof MenuButton\n     */\n    handleToggle(event) {\n        this.setState((state) => ({ open: !state.open }));\n        this.anchorEl = event.currentTarget;\n    }\n\n    /**\n     *\n     *\n     * @param {React.SyntheticEvent} event\n     * @memberof MenuButton\n     */\n    handleClose(event) {\n        if (this.anchorEl.contains(event.target)) {\n            return;\n        }\n        this.setState({ open: false });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof MenuButton\n     */\n    render() {\n        const {\n            classes, children, menuList, buttonProps,\n        } = this.props;\n        const { open } = this.state;\n        return (\n            <>\n                <Button\n                    id='itest-id-createapi'\n                    aria-owns={open ? 'menu-list-grow' : null}\n                    aria-haspopup='true'\n                    onClick={this.handleToggle}\n                    {...buttonProps}\n                >\n                    {children}\n                    {' '}\n                    ▼\n                </Button>\n                <Popper\n                    open={open}\n                    placement='bottom-start'\n                    anchorEl={this.anchorEl}\n                    transition\n                    disablePortal\n                    modifiers={{\n                        flip: {\n                            enabled: true,\n                        },\n                        preventOverflow: {\n                            enabled: true,\n                            boundariesElement: 'scrollParent',\n                        },\n                    }}\n                    className={classes.position}\n                >\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            id='menu-list-grow'\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={this.handleClose}>{menuList}</ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </>\n        );\n    }\n}\n\nMenuButton.propTypes = {\n    classes: PropTypes.shape({ position: PropTypes.shape({}) }).isRequired,\n    menuList: PropTypes.element.isRequired,\n    children: PropTypes.shape({}).isRequired,\n    buttonProps: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(MenuButton);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { useTheme } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport OnboardingMenuCard from 'AppComponents/Shared/Onboarding/OnboardingMenuCard';\nimport Onboarding from 'AppComponents/Shared/Onboarding/Onboarding';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/MuiAlert';\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nfunction SampleAPI() {\n    const theme = useTheme();\n    const { apiproductAddIcon } = theme.custom.landingPage.icons;\n    return (\n        <Onboarding\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPIProduct.title'\n                    defaultMessage='Let’s get started !'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPIProduct.description'\n                    defaultMessage='Combine multiple API resources in to a single API'\n                />\n            )}\n        >\n            {AuthManager.isNotPublisher()\n            && (\n                <>\n                    <Grid item xs={6}>\n                        <Alert variant='outlined' severity='warning'>\n                            <FormattedMessage\n                                id='Apis.Listing.SampleAPIProduct.creator.error'\n                                defaultMessage='API is not deployed yet! Please deploy the API before trying out'\n                            />\n                        </Alert>\n                    </Grid>\n                    <Grid item xs={12} />\n                </>\n            )}\n            <OnboardingMenuCard\n                disabled={AuthManager.isNotPublisher()}\n                id='itest-id-create-api-product'\n                to='/api-products/create'\n                name='API Product'\n                iconName={apiproductAddIcon}\n            />\n        </Onboarding>\n    );\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default withRouter(injectIntl(SampleAPI));\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable */\nimport API from 'AppData/api';\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of an API Product\n */\nclass APIProduct extends Resource {\n    constructor(name, context, kwargs) {\n        super();\n        let properties = kwargs;\n        if (name instanceof Object) {\n            properties = name;\n        } else {\n            this.name = name;\n            this.version = '1.0.0';\n            this.context = context;\n            this.isDefaultVersion = false;\n            this.transport = ['http', 'https'];\n            this.visibility = 'PUBLIC';\n            this.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: '',\n                },\n                production_endpoints: {\n                    url: '',\n                },\n            };\n        }\n        this._data = properties;\n        for (const key in properties) {\n            if (Object.prototype.hasOwnProperty.call(properties, key)) {\n                this[key] = properties[key];\n            }\n        }\n        this.apiType = API.CONSTS.APIProduct;\n        this.getType = this.getType.bind(this);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {object} Metadata for API request\n     * @private\n     */\n    _requestMetaData() {\n        Resource._requestMetaData();\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    getSettings() {\n        const promisedSettings = this.client.then(client => {\n            return client.apis['Settings'].getSettings();\n        });\n        return promisedSettings.then(response => response.body);\n    }\n\n    getMonetization(id, callback = null) {\n        const promiseMonetization = this.client.then(client => {\n            return client.apis['API Monetization'].getAPIMonetization(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseMonetization.then(response => response.body);\n    }\n\n    configureMonetizationToApiProduct(id, body) {\n        const promised_status = this.client.then(client => {\n            return client.apis['API Monetization'].addAPIMonetization({\n                apiId: id,\n                body,\n            });\n        });\n        return promised_status;\n    }\n\n    getSubscriptionPolicies(id, callback = null) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['APIs'].getAPISubscriptionPolicies(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    getMonetizationInvoice(id, callback = null) {\n        const promiseInvoice = this.client.then(client => {\n            return client.apis['API Monetization'].getSubscriptionUsage(\n                {\n                    subscriptionId: id\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseInvoice.then(response => response.body);\n    }\n\n    /**\n     * Create an API Product with the given parameters in template\n     * @param {Object} api_product_data - APIProduct data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating API Product\n     */\n    saveProduct() {\n        const promisedAPIResponse = this.client.then(client => {\n            const properties = client.spec.components.schemas.APIProduct.properties;\n            const data = {};\n\n            Object.keys(this).forEach(apiAttribute => {\n                if (apiAttribute in properties) {\n                    if (apiAttribute != 'apiType') {\n                        data[apiAttribute] = this[apiAttribute];\n                    }\n                }\n            });\n            const payload = {\n                'Content-Type': 'application/json',\n            };\n            const requestBody = {\n                requestBody: data\n            }\n            return client.apis['API Products'].createAPIProduct(payload, requestBody, this._requestMetaData());\n        });\n        return promisedAPIResponse.then(response => {\n            return new API(response.body);\n        });\n    }\n    /**\n     * Create an API Product with the given parameters in template and call the callback method given optional.\n     * @param {Object} apiData - API data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating and optionally calling the callback method.\n     */\n    create(apiData) {\n        let payload;\n        let promise_create;\n\n        payload = {\n            body: apiData,\n            'Content-Type': 'application/json',\n        };\n        promise_create = this.client.then(client => {\n            return client.apis['API Products'].createAPIProduct(payload, this._requestMetaData());\n        });\n\n        return promise_create;\n    }\n    /**\n     *\n     * Instance method of the API class to provide raw JSON object\n     * which is API body friendly to use with REST api requests\n     * Use this method instead of accessing the private _data object for\n     * converting to a JSON representation of an API object.\n     * Note: This is shallow coping\n     * Basically this is the revers operation in constructor.\n     * This method simply iterate through all the object properties\n     * and copy their values to new object excluding the properties in excludes list.\n     * So use this method sparingly!!\n     * @memberof API\n     * @param {Array} [userExcludes=[]] List of properties that are need to be excluded from the generated JSON object\n     * @returns {JSON} JSON representation of the API\n     */\n    toJSON(resource = this, userExcludes = []) {\n        var copy = {},\n            excludes = ['_data', 'client', 'type', ...userExcludes];\n        for (var prop in resource) {\n            if (!excludes.includes(prop)) {\n                copy[prop] = resource[prop];\n            }\n        }\n        return copy;\n    }\n\n    /**\n     * Get details of a given APIProduct\n     * @param id {string} UUID of the api-product.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    static get(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        const promisedAPIProduct = apiClient\n            .then(client => {\n                return client.apis['API Products'].getAPIProduct(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            });\n        return promisedAPIProduct.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     *\n     * Static method for get all API Products for current environment user.\n     * @param {Object} params API Products filtering parameters i:e { \"name\": \"MyBank Product\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     */\n    static all(params) {\n        let query = '';\n        if (params && 'query' in params) {\n            for (const [key, value] of Object.entries(params.query)) {\n                query += `${key}:${value},`;\n            }\n            params.query = query;\n        }\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        const promisedProducts = apiClient\n            .then(client => {\n                return client.apis['API Products'].getAllAPIProducts(params, Resource._requestMetaData());\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedProducts.then(response => {\n            response.obj.apiType = API.CONSTS.APIProduct;\n            return response;\n        });\n    }\n\n    /**\n     * Update an api Product via PUT HTTP method, Need to give the updated API Product object as the argument.\n     * @param apiProduct {Object} Updated API Product object(JSON) which needs to be updated\n     */\n    update(updatedProperties) {\n        const updatedAPI = { ...this.toJSON(), ...this.toJSON(updatedProperties) };\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: updatedAPI.id,\n            };\n            const requestBody = {\n                requestBody: updatedAPI,\n            }\n            return client.apis['API Products'].updateAPIProduct(payload, requestBody);\n        });\n        return promisedUpdate.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     * Get the thumnail of an API Product\n     *\n     * @param id {string} UUID of the api product\n     */\n    getAPIProductThumbnail(id) {\n        const promisedAPIThumbnail = this.client\n            .then(client => {\n                return client.apis['API Products'].getAPIProductThumbnail(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n        return promisedAPIThumbnail;\n    }\n\n    /**\n     * Add new thumbnail image to an API Product\n     *\n     * @param {String} id id of the API Product\n     * @param {File} imageFile thumbnail image to be uploaded\n     */\n    addAPIProductThumbnail(id, imageFile) {\n        const promisedAddAPIThumbnail = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    'Content-Type': imageFile.type,\n                };\n                return client.apis['API Products'].updateAPIProductThumbnail(\n                    payload,\n                    {\n                        requestBody: {\n                            file: imageFile,\n                        }\n                    },\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n        return promisedAddAPIThumbnail;\n    }\n\n    /**\n     *\n     * Delete an API Product given its UUID\n     * @static\n     * @param {String} id API Product UUID\n     */\n    static delete(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        return apiClient\n            .then(client => {\n                return client.apis['API Products'].deleteAPIProduct(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    /**\n     * Add document to API Product\n     * @param {*} id API Product ID to which the document should be attached\n     * @param {*} body\n     */\n    addDocument(id, body) {\n        const promisedAddDocument = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis['API Product Documents'].addAPIProductDocument(\n                    payload,\n                    {\n                        requestBody: body,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedAddDocument;\n    }\n\n    /**\n     * Returns documents attached to a given API Product\n     *\n     * @param {String} id API Product UUID\n     */\n    getDocuments(id, limit = 1000) {\n        const promisedDocuments = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].getAPIProductDocuments(\n                    {\n                        apiProductId: id,\n                        limit,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocuments;\n    }\n\n    /**\n     * Updates a product document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} body\n     */\n    updateDocument(productId, docId, body) {\n        const promisedUpdateDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents']\n                .updateAPIProductDocument(\n                    payload,\n                    {\n                        requestBody: body,\n                    },\n                    this._requestMetaData()\n                )\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdateDocument;\n    }\n\n    /**\n     * Get specified document attached to specified product\n     * @param {*} productId\n     * @param {*} docId\n     */\n    getDocument(productId, docId) {\n        const promisedDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].getAPIProductDocument(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocument;\n    }\n\n    /**\n     * Add inline content to a INLINE type document\n     * @param {*} apiProductId API Product ID\n     * @param {*} documentId Document ID\n     * @param {*} sourceType\n     * @param {*} inlineContent Content to be added to document\n     */\n    addInlineContentToDocument(apiProductId, documentId, sourceType, inlineContent) {\n        const promise = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId,\n                    sourceType,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].addAPIProductDocumentContent(\n                    payload,\n                    {\n                        requestBody: {\n                            inlineContent: inlineContent\n                        }\n                    },\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promise;\n    }\n\n    /**\n     * Get the inline content of a given document\n     * @param {*} apiProductId\n     * @param {*} docId\n     */\n    getInlineContentOfDocument(apiProductId, docId) {\n        const promisedDocContent = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId: docId,\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].getAPIProductDocumentContent(payload);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocContent;\n    }\n\n    /**\n     * Delete specified document\n     * @param {*} productId\n     * @param {*} docId\n     */\n    deleteDocument(productId, docId) {\n        const promiseDeleteDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].deleteAPIProductDocument(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseDeleteDocument;\n    }\n\n    /**\n     * Add a File resource to a document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} fileToDocument\n     */\n    addFileToDocument(productId, docId, fileToDocument) {\n        const promiseAddFileToDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents'].addAPIProductDocumentContent(\n                payload,\n                {\n                    requestBody: {\n                        file: fileToDocument\n                    }\n                },\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n\n        return promiseAddFileToDocument;\n    }\n\n    /**\n     * Get list of revisions.\n     *\n     * @param {string} apiProductId Id of the API.\n     * */\n    getProductRevisions(apiProductId) {\n        const promiseGetRevision = this.client\n            .then(client => {\n                   return client.apis['API Product Revisions'].getAPIProductRevisions( {\n                    apiProductId: apiProductId,\n                },\n            );\n        });\n        return promiseGetRevision;\n    }\n\n    /**\n     * Get list of revisions with environments.\n     *\n     * @param {string} apiProductId Id of the API.\n     * */\n    getProductRevisionsWithEnv(apiProductId) {\n        const promiseGetRevisionWithEnv = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].getAPIProductRevisions( \n                    {\n                        apiProductId: apiProductId,\n                        query: 'deployed:true',\n                    },\n            );\n        });\n        return promiseGetRevisionWithEnv;    \n    }\n\n    /**\n     * Add revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    createProductRevision(apiProductId, body) {\n        const promiseAddRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].createAPIProductRevision(\n                    {apiProductId: apiProductId},\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            }); \n        return promiseAddRevision;\n    }\n    /**\n     * Delete revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    deleteProductRevision(apiProductId, revisionId) {\n        const promiseDeleteRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].deleteAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    this._requestMetaData(),\n                );\n            });\n        return  promiseDeleteRevision;  \n    }\n\n    /**\n     * export an API Directory as A Zpi file\n     * @returns {promise} Promise Containing the ZPI file of the selected API\n     */\n     export() {\n        const apiZip = this.client.then((client) => {\n            return client.apis['Import Export'].exportAPIProduct({\n                name: this.name,\n                version: '1.0.0'\n            },  this._requestMetaData({\n                    'accept': 'application/zip'\n                })\n            );\n        });\n        return apiZip;\n    }\n\n    /**\n     * Undeploy revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    undeployProductRevision(apiProductId, revisionId, body) {\n        const promiseUndeployRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].undeployAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            });\n        return  promiseUndeployRevision;     \n    }\n\n     /**\n     * Undeploy revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    deployProductRevision(apiProductId, revisionId, body) {\n        const promiseDeployRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].deployAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            });\n        return promiseDeployRevision;  \n    }\n\n    /**\n     * Restore revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    restoreProductRevision(apiProductId, revisionId) {\n        const promiseRestoreRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].restoreAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    this._requestMetaData(),\n                );\n            });\n        return promiseRestoreRevision;  \n    }\n\n    /**\n    * Change displayInDevportal.\n    *\n    * @param {string} apiProductId Id of the API.\n    * @param {string} deploymentId Id of the API.\n    * @param {Object} body Revision Object.\n    * */\n    displayInDevportalProduct(apiProductId, deploymentId, body) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        return apiClient.then(\n            client => {\n                return client.apis['API Product Revisions'].updateAPIProductDeployment(\n                    {\n                        apiProductId: apiProductId,\n                        deploymentId: deploymentId\n                    },\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            });\n    }\n\n    /**\n     * Update an api swagger via PUT HTTP method\n     * @param {*} swagger\n     */\n    updateSwagger(swagger) {\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: this.id,\n                apiDefinition: JSON.stringify(swagger),\n                'Content-Type': 'multipart/form-data',\n            };\n            return client.apis['API Products']\n                .put_api_products__apiProductId__swagger(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                )\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdate.then(response => {\n            return this;\n        });\n    }\n\n    /**\n     * Get the swagger of an API Product\n     * @param id {String} UUID of the API Product in which the swagger is needed\n     */\n    getSwagger(id = this.id) {\n        const promiseGet = this.client\n            .then(client => {\n                return client.apis['API Products'].getAPIProductSwagger(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseGet;\n    }\n}\n\nexport default APIProduct;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    linkRoot: {\n        color: theme.custom.landingPage.menu.primary,\n        '&:hover': {\n            backgroundColor: '#0B78F014',\n            textDecoration: 'none',\n        },\n    },\n}));\n\nconst LandingMenuItem = (props) => {\n    const {\n        helperText, children, id, linkTo, component = 'Link', onClick, dense,\n    } = props;\n    const { linkRoot } = useStyles();\n    return (\n        <Grid\n            item\n            xs={12}\n        >\n            <Typography\n                color='primary'\n                variant={dense ? 'subtitle1' : 'h6'}\n            >\n                {/* Using React Router Links with Material-UI Links\n                Pattern as suggested in https://material-ui.com/guides/composition/#link */}\n                {component.toLowerCase() === 'link' && (\n                    <Link\n                        className={linkRoot}\n                        id={id}\n                        component={RouterLink}\n                        to={linkTo}\n                    >\n                        {children}\n                    </Link>\n                )}\n                {component.toLowerCase() === 'button' && (\n                    <Button\n                        id={id}\n                        size={dense ? 'small' : 'medium'}\n                        onClick={onClick}\n                        color='primary'\n                        variant='outlined'\n                    >\n                        {children}\n                    </Button>\n                )}\n\n            </Typography>\n            <Box\n                color='text.secondary'\n                fontFamily='fontFamily'\n                fontSize={dense ? 'caption.fontSize' : 'body2.fontSize'}\n            >\n                {helperText}\n            </Box>\n        </Grid>\n    );\n};\n\nexport default LandingMenuItem;\n","import React, { useState } from 'react';\nimport blue from '@material-ui/core/colors/blue';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Configurations from 'Config';\nimport Fade from '@material-ui/core/Fade';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: theme.spacing(32),\n    },\n    boxTransition: {\n        transition: 'box-shadow 0.9s cubic-bezier(.25,.8,.25,1)',\n        cursor: 'pointer',\n    },\n    overlayBox: {\n        cursor: 'auto',\n        outline: 'none',\n        'border-color': '#f9f9f9', // TODO: take from theme ~tmkb\n        'box-shadow': '0 0 6px 4px #f9f9f9',\n        'border-radius': '5px',\n    },\n    overlayCloseButton: {\n        float: 'right',\n    },\n}));\n\nconst LandingMenu = (props) => {\n    const {\n        title, icon, children, id,\n    } = props;\n    const [isHover, setIsHover] = useState(false);\n    const [isCollapsed, setIsCollapsed] = useState(false);\n    const [isFadeOut, setIsFadeOut] = useState(true);\n    const {\n        boxTransition, overlayBox, overlayCloseButton, root,\n    } = useStyles();\n    const onMouseOver = () => {\n        setIsHover(true);\n    };\n    const onMouseOut = () => {\n        setIsHover(false);\n    };\n\n    return (\n        <Grid\n            className={root}\n            item\n            xs={12}\n            sm={5}\n            md={3}\n            lg={2}\n        >\n            <Box\n                id={id}\n                className={boxTransition}\n                onMouseOver={onMouseOver}\n                onMouseOut={onMouseOut}\n                bgcolor='background.paper'\n                justifyContent='center'\n                alignItems='center'\n                borderRadius={8}\n                borderColor='grey.300'\n                display='flex'\n                border={1}\n                boxShadow={isHover ? 4 : 1}\n                minHeight={340}\n                p={1}\n                color={blue[900]}\n                fontSize='h4.fontSize'\n                fontFamily='fontFamily'\n                flexDirection='row'\n                onClick={(e) => { setIsCollapsed(true); setIsFadeOut(false); e.preventDefault(); e.stopPropagation(); }}\n                position='relative'\n            >\n                <Grid\n                    container\n                    direction='row'\n                    justify='center'\n                    alignItems='center'\n                >\n                    <Grid item xs={12}>\n                        <Box\n                            alignItems='center'\n                            mt={2}\n                            mb={4}\n                            justifyContent='center'\n                            display={{ xs: 'none', sm: 'flex' }}\n                        >\n                            <img\n                                width='190px'\n                                src={Configurations.app.context\n                                    + icon}\n                                alt={title}\n                                aria-hidden='true'\n                            />\n                        </Box>\n                    </Grid>\n                    {title}\n                </Grid>\n                <Box\n                    position='absolute'\n                    top={5}\n                    left={5}\n                    height='97%'\n                    bgcolor='#f8f8fb'\n                    textAlign='center'\n                    width='97%'\n                    className={overlayBox}\n                    visibility={isFadeOut && 'hidden'}\n                >\n                    <Fade\n                        onExited={() => setIsFadeOut(true)}\n                        timeout={{ enter: 500, exit: 150 }}\n                        in={isCollapsed}\n                    >\n                        <Box>\n                            <IconButton\n                                className={overlayCloseButton}\n                                onClick={(e) => {\n                                    setIsCollapsed(false);\n                                    e.preventDefault(); e.stopPropagation();\n                                }}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                            <Grid\n                                container\n                                direction='row'\n                                justify='flex-start'\n                                alignItems='center'\n                                spacing={4}\n                            >\n                                {/* Menu links or buttons */}\n                                {children}\n                            </Grid>\n                        </Box>\n                    </Fade>\n                </Box>\n            </Box>\n        </Grid>\n    );\n};\n\nexport default LandingMenu;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst APICreateMenuSection = (props) => {\n    const {\n        title, children,\n    } = props;\n\n\n    return (\n        <Grid\n            item\n            xs={11}\n            sm={5}\n            md={2}\n        >\n            <Box mb={2}>\n                <Typography\n                    variant='h6'\n                    align='left'\n                >\n                    {title}\n                </Typography>\n            </Box>\n            <Grid\n                container\n                direction='row'\n                justify='flex-start'\n                alignItems='center'\n                spacing={4}\n            >\n                {/* Menu links or buttons */}\n                {children}\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default APICreateMenuSection;\n"],"sourceRoot":""}