{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/APIDefinition/SwaggerEditorDrawer.jsx"],"names":["styles","editorPane","width","height","overflow","editorRoot","errorPane","paddingTop","paddingRight","swaggerPane","MonacoEditor","lazy","SwaggerEditorDrawer","props","onContentChange","bind","content","onEditContent","this","classes","language","swagger","errorDetails","noOfErrors","isValid","swaggerUrl","encodeURIComponent","container","spacing","className","item","theme","value","onChange","options","glyphMargin","file","url","React","Component","propTypes","PropTypes","shape","isRequired","string","func","objectOf","object","number","withStyles"],"mappings":"usGAwBMA,OAAS,iBAAO,CAClBC,WAAY,CACRC,MAAO,MACPC,OAAQ,OACRC,SAAU,UAEdC,WAAY,CACRF,OAAQ,QAEZG,UAAW,CACPJ,MAAO,OACPK,WAAY,OACZC,aAAc,QAElBC,YAAa,CACT,gBAAiB,CACbP,MAAO,WAKbQ,aAAeC,iDAAK,kBAAM,8DAQ1BC,oB,wHAIF,6BAAYC,GAAO,wDACf,mBAAMA,IACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,2BAFR,E,sEASnB,SAAgBC,IAEZC,EAD0BC,KAAKL,MAAvBI,eACMD,K,oBAMlB,WAAS,MAGDE,KAAKL,MADLM,EAFC,EAEDA,QAASC,EAFR,EAEQA,SAAUC,EAFlB,EAEkBA,QAASC,EAF3B,EAE2BA,aAAcC,EAFzC,EAEyCA,WAAYC,EAFrD,EAEqDA,QAEpDC,EAAa,aAAeL,EAAW,IAAMM,mBAAmBL,GACtE,OACI,sHACI,2DAAC,sDAAD,CAAMM,WAAS,EAACC,QAAS,EAAGC,UAAWV,EAAQd,YAC3C,2DAAC,sDAAD,CAAMyB,MAAI,EAACD,UAAWV,EAAQlB,YAC1B,2DAACS,aAAD,CACIU,SAAUA,EACVlB,MAAM,OACNC,OAAO,qBACP4B,MAAM,UACNC,MAAOX,EACPY,SAAUf,KAAKJ,gBACfoB,QAAS,CAAEC,aAAa,MAGhC,2DAAC,sDAAD,CAAML,MAAI,EAACD,UAAWV,EAAQlB,YACzBuB,EAAQY,MACL,2DAAC,sDAAD,CAAMN,MAAI,EAACD,UAAWV,EAAQb,WAC1B,2DAAC,+FAAD,CACIgB,aAAcA,EACdC,WAAYA,EACZC,QAASA,KAIrB,2DAAC,sDAAD,CAAMM,MAAI,EAACD,UAAWV,EAAQV,aAC1B,2DAAC,oDAAD,CAAW4B,IAAKZ,U,gJAnDVa,6CAAMC,WA4DxC3B,oBAAoB4B,UAAY,CAC5BrB,QAASsB,kDAAUC,MAAM,IAAIC,WAC7BvB,SAAUqB,kDAAUG,OAAOD,WAC3BtB,QAASoB,kDAAUG,OAAOD,WAC1B1B,cAAewB,kDAAUI,KAAKF,WAC9BrB,aAAcmB,kDAAUK,SAASL,kDAAUM,QAAQJ,WACnDpB,WAAYkB,kDAAUO,OAAOL,WAC7BnB,QAASiB,kDAAUK,SAASL,kDAAUM,QAAQJ,Y,aAGnCM,2EAAWjD,OAAXiD,CAAmBrC,qB,2BAAnB,qC,qIAnGTZ,O,wSAqBAU,a,8SAQAE,oB","file":"EditorDialog.a7e64fd47b9eac9a541a.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SwaggerValidationErrors from 'AppComponents/Apis/Create/OpenAPI/Steps/SwaggerValidationErrors';\nimport SwaggerUI from './swaggerUI/SwaggerUI';\n\nconst styles = () => ({\n    editorPane: {\n        width: '50%',\n        height: '100%',\n        overflow: 'scroll',\n    },\n    editorRoot: {\n        height: '100%',\n    },\n    errorPane: {\n        width: 'auto',\n        paddingTop: '10px',\n        paddingRight: '10px',\n    },\n    swaggerPane: {\n        '& .swagger-ui': {\n            width: '100%',\n        },\n    },\n});\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\n/**\n * This component hosts the Swagger Editor component.\n * Known Issue: The cursor jumps back to the start of the first line when updating the swagger-ui based on the\n * modification done via the editor.\n * https://github.com/wso2/product-apim/issues/5071\n * */\nclass SwaggerEditorDrawer extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.onContentChange = this.onContentChange.bind(this);\n    }\n\n    /**\n     * Method to handle the change event of the editor.\n     * @param {string} content : The edited content.\n     * */\n    onContentChange(content) {\n        const { onEditContent } = this.props;\n        onEditContent(content);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const {\n            classes, language, swagger, errorDetails, noOfErrors, isValid,\n        } = this.props;\n        const swaggerUrl = 'data:text/' + language + ',' + encodeURIComponent(swagger);\n        return (\n            <>\n                <Grid container spacing={2} className={classes.editorRoot}>\n                    <Grid item className={classes.editorPane}>\n                        <MonacoEditor\n                            language={language}\n                            width='100%'\n                            height='calc(100vh - 51px)'\n                            theme='vs-dark'\n                            value={swagger}\n                            onChange={this.onContentChange}\n                            options={{ glyphMargin: true }}\n                        />\n                    </Grid>\n                    <Grid item className={classes.editorPane}>\n                        {isValid.file && (\n                            <Grid item className={classes.errorPane}>\n                                <SwaggerValidationErrors\n                                    errorDetails={errorDetails}\n                                    noOfErrors={noOfErrors}\n                                    isValid={isValid}\n                                />\n                            </Grid>\n                        )}\n                        <Grid item className={classes.swaggerPane}>\n                            <SwaggerUI url={swaggerUrl} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nSwaggerEditorDrawer.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    language: PropTypes.string.isRequired,\n    swagger: PropTypes.string.isRequired,\n    onEditContent: PropTypes.func.isRequired,\n    errorDetails: PropTypes.objectOf(PropTypes.object).isRequired,\n    noOfErrors: PropTypes.number.isRequired,\n    isValid: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default withStyles(styles)(SwaggerEditorDrawer);\n"],"sourceRoot":""}